
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ce6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000ce6  00000d5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000d5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001428  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000100  00000000  00000000  000014b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013e1  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000453  00000000  00000000  00002991  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000829  00000000  00000000  00002de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000240  00000000  00000000  00003610  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002cc  00000000  00000000  00003850  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000012b4  00000000  00000000  00003b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00004dd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ee       	ldi	r30, 0xE6	; 230
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 89 05 	call	0xb12	; 0xb12 <main>
  8a:	0c 94 71 06 	jmp	0xce2	; 0xce2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <GPIO_INIT>:
#define notconnected 0
#include "GPIO_MCAL.h"

//*-----INITIALIZATION-----*
void GPIO_INIT(void){
	XDDRA= default_direction;
  92:	1a ba       	out	0x1a, r1	; 26
	XDDRB= default_direction;
  94:	17 ba       	out	0x17, r1	; 23
	XDDRC= default_direction;
  96:	14 ba       	out	0x14, r1	; 20
	XDDRD= default_direction;
  98:	11 ba       	out	0x11, r1	; 17
}
  9a:	08 95       	ret

0000009c <GPIO_SETPIN_DIR>:

//*-----PIN-------*

void GPIO_SETPIN_DIR(u8 port,u8 pinnum,u8 dir){
	switch(port){
  9c:	84 34       	cpi	r24, 0x44	; 68
  9e:	09 f4       	brne	.+2      	; 0xa2 <GPIO_SETPIN_DIR+0x6>
  a0:	71 c0       	rjmp	.+226    	; 0x184 <GPIO_SETPIN_DIR+0xe8>
  a2:	85 34       	cpi	r24, 0x45	; 69
  a4:	48 f4       	brcc	.+18     	; 0xb8 <GPIO_SETPIN_DIR+0x1c>
  a6:	82 34       	cpi	r24, 0x42	; 66
  a8:	99 f1       	breq	.+102    	; 0x110 <GPIO_SETPIN_DIR+0x74>
  aa:	83 34       	cpi	r24, 0x43	; 67
  ac:	08 f0       	brcs	.+2      	; 0xb0 <GPIO_SETPIN_DIR+0x14>
  ae:	4d c0       	rjmp	.+154    	; 0x14a <GPIO_SETPIN_DIR+0xae>
  b0:	81 34       	cpi	r24, 0x41	; 65
  b2:	09 f0       	breq	.+2      	; 0xb6 <GPIO_SETPIN_DIR+0x1a>
  b4:	83 c0       	rjmp	.+262    	; 0x1bc <GPIO_SETPIN_DIR+0x120>
  b6:	0f c0       	rjmp	.+30     	; 0xd6 <GPIO_SETPIN_DIR+0x3a>
  b8:	82 36       	cpi	r24, 0x62	; 98
  ba:	51 f1       	breq	.+84     	; 0x110 <GPIO_SETPIN_DIR+0x74>
  bc:	83 36       	cpi	r24, 0x63	; 99
  be:	20 f4       	brcc	.+8      	; 0xc8 <GPIO_SETPIN_DIR+0x2c>
  c0:	81 36       	cpi	r24, 0x61	; 97
  c2:	09 f0       	breq	.+2      	; 0xc6 <GPIO_SETPIN_DIR+0x2a>
  c4:	7b c0       	rjmp	.+246    	; 0x1bc <GPIO_SETPIN_DIR+0x120>
  c6:	07 c0       	rjmp	.+14     	; 0xd6 <GPIO_SETPIN_DIR+0x3a>
  c8:	83 36       	cpi	r24, 0x63	; 99
  ca:	09 f4       	brne	.+2      	; 0xce <GPIO_SETPIN_DIR+0x32>
  cc:	3e c0       	rjmp	.+124    	; 0x14a <GPIO_SETPIN_DIR+0xae>
  ce:	84 36       	cpi	r24, 0x64	; 100
  d0:	09 f0       	breq	.+2      	; 0xd4 <GPIO_SETPIN_DIR+0x38>
  d2:	74 c0       	rjmp	.+232    	; 0x1bc <GPIO_SETPIN_DIR+0x120>
  d4:	57 c0       	rjmp	.+174    	; 0x184 <GPIO_SETPIN_DIR+0xe8>
		case 'A':
		case 'a':
			if(dir==1){
  d6:	41 30       	cpi	r20, 0x01	; 1
  d8:	69 f4       	brne	.+26     	; 0xf4 <GPIO_SETPIN_DIR+0x58>
				SET_BIT(XDDRA,pinnum);
  da:	2a b3       	in	r18, 0x1a	; 26
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	ac 01       	movw	r20, r24
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <GPIO_SETPIN_DIR+0x4c>
  e4:	44 0f       	add	r20, r20
  e6:	55 1f       	adc	r21, r21
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <GPIO_SETPIN_DIR+0x48>
  ec:	ba 01       	movw	r22, r20
  ee:	62 2b       	or	r22, r18
  f0:	6a bb       	out	0x1a, r22	; 26
  f2:	08 95       	ret
			}
			else{
				RESET_BIT(XDDRA,pinnum);
  f4:	2a b3       	in	r18, 0x1a	; 26
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	ac 01       	movw	r20, r24
  fc:	02 c0       	rjmp	.+4      	; 0x102 <GPIO_SETPIN_DIR+0x66>
  fe:	44 0f       	add	r20, r20
 100:	55 1f       	adc	r21, r21
 102:	6a 95       	dec	r22
 104:	e2 f7       	brpl	.-8      	; 0xfe <GPIO_SETPIN_DIR+0x62>
 106:	ba 01       	movw	r22, r20
 108:	60 95       	com	r22
 10a:	62 23       	and	r22, r18
 10c:	6a bb       	out	0x1a, r22	; 26
 10e:	08 95       	ret
			
			}
			break;
		case 'B':
		case 'b':
			if(dir==1){
 110:	41 30       	cpi	r20, 0x01	; 1
 112:	69 f4       	brne	.+26     	; 0x12e <GPIO_SETPIN_DIR+0x92>
				SET_BIT(XDDRB,pinnum);
 114:	27 b3       	in	r18, 0x17	; 23
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	ac 01       	movw	r20, r24
 11c:	02 c0       	rjmp	.+4      	; 0x122 <GPIO_SETPIN_DIR+0x86>
 11e:	44 0f       	add	r20, r20
 120:	55 1f       	adc	r21, r21
 122:	6a 95       	dec	r22
 124:	e2 f7       	brpl	.-8      	; 0x11e <GPIO_SETPIN_DIR+0x82>
 126:	ba 01       	movw	r22, r20
 128:	62 2b       	or	r22, r18
 12a:	67 bb       	out	0x17, r22	; 23
 12c:	08 95       	ret
			}else{
				RESET_BIT(XDDRB,pinnum);
 12e:	27 b3       	in	r18, 0x17	; 23
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	ac 01       	movw	r20, r24
 136:	02 c0       	rjmp	.+4      	; 0x13c <GPIO_SETPIN_DIR+0xa0>
 138:	44 0f       	add	r20, r20
 13a:	55 1f       	adc	r21, r21
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <GPIO_SETPIN_DIR+0x9c>
 140:	ba 01       	movw	r22, r20
 142:	60 95       	com	r22
 144:	62 23       	and	r22, r18
 146:	67 bb       	out	0x17, r22	; 23
 148:	08 95       	ret
			}
			break;
		case 'C':
		case 'c':
			if(dir==1){
 14a:	41 30       	cpi	r20, 0x01	; 1
 14c:	69 f4       	brne	.+26     	; 0x168 <GPIO_SETPIN_DIR+0xcc>
				SET_BIT(XDDRC,pinnum);
 14e:	24 b3       	in	r18, 0x14	; 20
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	ac 01       	movw	r20, r24
 156:	02 c0       	rjmp	.+4      	; 0x15c <GPIO_SETPIN_DIR+0xc0>
 158:	44 0f       	add	r20, r20
 15a:	55 1f       	adc	r21, r21
 15c:	6a 95       	dec	r22
 15e:	e2 f7       	brpl	.-8      	; 0x158 <GPIO_SETPIN_DIR+0xbc>
 160:	ba 01       	movw	r22, r20
 162:	62 2b       	or	r22, r18
 164:	64 bb       	out	0x14, r22	; 20
 166:	08 95       	ret
			}else{
				RESET_BIT(XDDRC,pinnum);
 168:	24 b3       	in	r18, 0x14	; 20
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	ac 01       	movw	r20, r24
 170:	02 c0       	rjmp	.+4      	; 0x176 <GPIO_SETPIN_DIR+0xda>
 172:	44 0f       	add	r20, r20
 174:	55 1f       	adc	r21, r21
 176:	6a 95       	dec	r22
 178:	e2 f7       	brpl	.-8      	; 0x172 <GPIO_SETPIN_DIR+0xd6>
 17a:	ba 01       	movw	r22, r20
 17c:	60 95       	com	r22
 17e:	62 23       	and	r22, r18
 180:	64 bb       	out	0x14, r22	; 20
 182:	08 95       	ret
			}
			break;
		case 'D':
		case 'd':
			if(dir==1){
 184:	41 30       	cpi	r20, 0x01	; 1
 186:	69 f4       	brne	.+26     	; 0x1a2 <GPIO_SETPIN_DIR+0x106>
				SET_BIT(XDDRD,pinnum);
 188:	21 b3       	in	r18, 0x11	; 17
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	ac 01       	movw	r20, r24
 190:	02 c0       	rjmp	.+4      	; 0x196 <GPIO_SETPIN_DIR+0xfa>
 192:	44 0f       	add	r20, r20
 194:	55 1f       	adc	r21, r21
 196:	6a 95       	dec	r22
 198:	e2 f7       	brpl	.-8      	; 0x192 <GPIO_SETPIN_DIR+0xf6>
 19a:	ba 01       	movw	r22, r20
 19c:	62 2b       	or	r22, r18
 19e:	61 bb       	out	0x11, r22	; 17
 1a0:	08 95       	ret
			}else{
				RESET_BIT(XDDRD,pinnum);
 1a2:	21 b3       	in	r18, 0x11	; 17
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	ac 01       	movw	r20, r24
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <GPIO_SETPIN_DIR+0x114>
 1ac:	44 0f       	add	r20, r20
 1ae:	55 1f       	adc	r21, r21
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <GPIO_SETPIN_DIR+0x110>
 1b4:	ba 01       	movw	r22, r20
 1b6:	60 95       	com	r22
 1b8:	62 23       	and	r22, r18
 1ba:	61 bb       	out	0x11, r22	; 17
 1bc:	08 95       	ret

000001be <GPIO_WRITE_PIN>:
	
	}		
	
}
void GPIO_WRITE_PIN(u8 port,u8 pinnum,u8 val){
	switch(port){
 1be:	84 34       	cpi	r24, 0x44	; 68
 1c0:	09 f4       	brne	.+2      	; 0x1c4 <GPIO_WRITE_PIN+0x6>
 1c2:	71 c0       	rjmp	.+226    	; 0x2a6 <GPIO_WRITE_PIN+0xe8>
 1c4:	85 34       	cpi	r24, 0x45	; 69
 1c6:	48 f4       	brcc	.+18     	; 0x1da <GPIO_WRITE_PIN+0x1c>
 1c8:	82 34       	cpi	r24, 0x42	; 66
 1ca:	99 f1       	breq	.+102    	; 0x232 <GPIO_WRITE_PIN+0x74>
 1cc:	83 34       	cpi	r24, 0x43	; 67
 1ce:	08 f0       	brcs	.+2      	; 0x1d2 <GPIO_WRITE_PIN+0x14>
 1d0:	4d c0       	rjmp	.+154    	; 0x26c <GPIO_WRITE_PIN+0xae>
 1d2:	81 34       	cpi	r24, 0x41	; 65
 1d4:	09 f0       	breq	.+2      	; 0x1d8 <GPIO_WRITE_PIN+0x1a>
 1d6:	83 c0       	rjmp	.+262    	; 0x2de <GPIO_WRITE_PIN+0x120>
 1d8:	0f c0       	rjmp	.+30     	; 0x1f8 <GPIO_WRITE_PIN+0x3a>
 1da:	82 36       	cpi	r24, 0x62	; 98
 1dc:	51 f1       	breq	.+84     	; 0x232 <GPIO_WRITE_PIN+0x74>
 1de:	83 36       	cpi	r24, 0x63	; 99
 1e0:	20 f4       	brcc	.+8      	; 0x1ea <GPIO_WRITE_PIN+0x2c>
 1e2:	81 36       	cpi	r24, 0x61	; 97
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <GPIO_WRITE_PIN+0x2a>
 1e6:	7b c0       	rjmp	.+246    	; 0x2de <GPIO_WRITE_PIN+0x120>
 1e8:	07 c0       	rjmp	.+14     	; 0x1f8 <GPIO_WRITE_PIN+0x3a>
 1ea:	83 36       	cpi	r24, 0x63	; 99
 1ec:	09 f4       	brne	.+2      	; 0x1f0 <GPIO_WRITE_PIN+0x32>
 1ee:	3e c0       	rjmp	.+124    	; 0x26c <GPIO_WRITE_PIN+0xae>
 1f0:	84 36       	cpi	r24, 0x64	; 100
 1f2:	09 f0       	breq	.+2      	; 0x1f6 <GPIO_WRITE_PIN+0x38>
 1f4:	74 c0       	rjmp	.+232    	; 0x2de <GPIO_WRITE_PIN+0x120>
 1f6:	57 c0       	rjmp	.+174    	; 0x2a6 <GPIO_WRITE_PIN+0xe8>
		case 'A':
		case 'a':
		if(val==1){
 1f8:	41 30       	cpi	r20, 0x01	; 1
 1fa:	69 f4       	brne	.+26     	; 0x216 <GPIO_WRITE_PIN+0x58>
			SET_BIT(XPORTA,pinnum);
 1fc:	2b b3       	in	r18, 0x1b	; 27
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	ac 01       	movw	r20, r24
 204:	02 c0       	rjmp	.+4      	; 0x20a <GPIO_WRITE_PIN+0x4c>
 206:	44 0f       	add	r20, r20
 208:	55 1f       	adc	r21, r21
 20a:	6a 95       	dec	r22
 20c:	e2 f7       	brpl	.-8      	; 0x206 <GPIO_WRITE_PIN+0x48>
 20e:	ba 01       	movw	r22, r20
 210:	62 2b       	or	r22, r18
 212:	6b bb       	out	0x1b, r22	; 27
 214:	08 95       	ret
		}
		else{
			RESET_BIT(XPORTA,pinnum);
 216:	2b b3       	in	r18, 0x1b	; 27
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	ac 01       	movw	r20, r24
 21e:	02 c0       	rjmp	.+4      	; 0x224 <GPIO_WRITE_PIN+0x66>
 220:	44 0f       	add	r20, r20
 222:	55 1f       	adc	r21, r21
 224:	6a 95       	dec	r22
 226:	e2 f7       	brpl	.-8      	; 0x220 <GPIO_WRITE_PIN+0x62>
 228:	ba 01       	movw	r22, r20
 22a:	60 95       	com	r22
 22c:	62 23       	and	r22, r18
 22e:	6b bb       	out	0x1b, r22	; 27
 230:	08 95       	ret
			
		}
		break;
		case 'B':
		case 'b':
		if(val==1){
 232:	41 30       	cpi	r20, 0x01	; 1
 234:	69 f4       	brne	.+26     	; 0x250 <GPIO_WRITE_PIN+0x92>
			SET_BIT(XPORTB,pinnum);
 236:	28 b3       	in	r18, 0x18	; 24
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	ac 01       	movw	r20, r24
 23e:	02 c0       	rjmp	.+4      	; 0x244 <GPIO_WRITE_PIN+0x86>
 240:	44 0f       	add	r20, r20
 242:	55 1f       	adc	r21, r21
 244:	6a 95       	dec	r22
 246:	e2 f7       	brpl	.-8      	; 0x240 <GPIO_WRITE_PIN+0x82>
 248:	ba 01       	movw	r22, r20
 24a:	62 2b       	or	r22, r18
 24c:	68 bb       	out	0x18, r22	; 24
 24e:	08 95       	ret
		}else{
			RESET_BIT(XPORTB,pinnum);
 250:	28 b3       	in	r18, 0x18	; 24
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	ac 01       	movw	r20, r24
 258:	02 c0       	rjmp	.+4      	; 0x25e <GPIO_WRITE_PIN+0xa0>
 25a:	44 0f       	add	r20, r20
 25c:	55 1f       	adc	r21, r21
 25e:	6a 95       	dec	r22
 260:	e2 f7       	brpl	.-8      	; 0x25a <GPIO_WRITE_PIN+0x9c>
 262:	ba 01       	movw	r22, r20
 264:	60 95       	com	r22
 266:	62 23       	and	r22, r18
 268:	68 bb       	out	0x18, r22	; 24
 26a:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if(val==1){
 26c:	41 30       	cpi	r20, 0x01	; 1
 26e:	69 f4       	brne	.+26     	; 0x28a <GPIO_WRITE_PIN+0xcc>
			SET_BIT(XPORTC,pinnum);
 270:	25 b3       	in	r18, 0x15	; 21
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	ac 01       	movw	r20, r24
 278:	02 c0       	rjmp	.+4      	; 0x27e <GPIO_WRITE_PIN+0xc0>
 27a:	44 0f       	add	r20, r20
 27c:	55 1f       	adc	r21, r21
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <GPIO_WRITE_PIN+0xbc>
 282:	ba 01       	movw	r22, r20
 284:	62 2b       	or	r22, r18
 286:	65 bb       	out	0x15, r22	; 21
 288:	08 95       	ret
		}else{
			RESET_BIT(XPORTC,pinnum);
 28a:	25 b3       	in	r18, 0x15	; 21
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	ac 01       	movw	r20, r24
 292:	02 c0       	rjmp	.+4      	; 0x298 <GPIO_WRITE_PIN+0xda>
 294:	44 0f       	add	r20, r20
 296:	55 1f       	adc	r21, r21
 298:	6a 95       	dec	r22
 29a:	e2 f7       	brpl	.-8      	; 0x294 <GPIO_WRITE_PIN+0xd6>
 29c:	ba 01       	movw	r22, r20
 29e:	60 95       	com	r22
 2a0:	62 23       	and	r22, r18
 2a2:	65 bb       	out	0x15, r22	; 21
 2a4:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if(val==1){
 2a6:	41 30       	cpi	r20, 0x01	; 1
 2a8:	69 f4       	brne	.+26     	; 0x2c4 <GPIO_WRITE_PIN+0x106>
			SET_BIT(XPORTD,pinnum);
 2aa:	22 b3       	in	r18, 0x12	; 18
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	ac 01       	movw	r20, r24
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <GPIO_WRITE_PIN+0xfa>
 2b4:	44 0f       	add	r20, r20
 2b6:	55 1f       	adc	r21, r21
 2b8:	6a 95       	dec	r22
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <GPIO_WRITE_PIN+0xf6>
 2bc:	ba 01       	movw	r22, r20
 2be:	62 2b       	or	r22, r18
 2c0:	62 bb       	out	0x12, r22	; 18
 2c2:	08 95       	ret
		}else{
			RESET_BIT(XPORTD,pinnum);
 2c4:	22 b3       	in	r18, 0x12	; 18
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	ac 01       	movw	r20, r24
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <GPIO_WRITE_PIN+0x114>
 2ce:	44 0f       	add	r20, r20
 2d0:	55 1f       	adc	r21, r21
 2d2:	6a 95       	dec	r22
 2d4:	e2 f7       	brpl	.-8      	; 0x2ce <GPIO_WRITE_PIN+0x110>
 2d6:	ba 01       	movw	r22, r20
 2d8:	60 95       	com	r22
 2da:	62 23       	and	r22, r18
 2dc:	62 bb       	out	0x12, r22	; 18
 2de:	08 95       	ret

000002e0 <GPIO_READ_PIN>:
	
	
	}
u8 GPIO_READ_PIN(u8 port,u8 pinnum){
	u8 x=0;
	switch(port){
 2e0:	84 34       	cpi	r24, 0x44	; 68
 2e2:	09 f4       	brne	.+2      	; 0x2e6 <GPIO_READ_PIN+0x6>
 2e4:	54 c0       	rjmp	.+168    	; 0x38e <GPIO_READ_PIN+0xae>
 2e6:	85 34       	cpi	r24, 0x45	; 69
 2e8:	40 f4       	brcc	.+16     	; 0x2fa <GPIO_READ_PIN+0x1a>
 2ea:	82 34       	cpi	r24, 0x42	; 66
 2ec:	41 f1       	breq	.+80     	; 0x33e <GPIO_READ_PIN+0x5e>
 2ee:	83 34       	cpi	r24, 0x43	; 67
 2f0:	d0 f5       	brcc	.+116    	; 0x366 <GPIO_READ_PIN+0x86>
 2f2:	81 34       	cpi	r24, 0x41	; 65
 2f4:	09 f0       	breq	.+2      	; 0x2f8 <GPIO_READ_PIN+0x18>
 2f6:	60 c0       	rjmp	.+192    	; 0x3b8 <GPIO_READ_PIN+0xd8>
 2f8:	0e c0       	rjmp	.+28     	; 0x316 <GPIO_READ_PIN+0x36>
 2fa:	82 36       	cpi	r24, 0x62	; 98
 2fc:	01 f1       	breq	.+64     	; 0x33e <GPIO_READ_PIN+0x5e>
 2fe:	83 36       	cpi	r24, 0x63	; 99
 300:	20 f4       	brcc	.+8      	; 0x30a <GPIO_READ_PIN+0x2a>
 302:	81 36       	cpi	r24, 0x61	; 97
 304:	09 f0       	breq	.+2      	; 0x308 <GPIO_READ_PIN+0x28>
 306:	58 c0       	rjmp	.+176    	; 0x3b8 <GPIO_READ_PIN+0xd8>
 308:	06 c0       	rjmp	.+12     	; 0x316 <GPIO_READ_PIN+0x36>
 30a:	83 36       	cpi	r24, 0x63	; 99
 30c:	61 f1       	breq	.+88     	; 0x366 <GPIO_READ_PIN+0x86>
 30e:	84 36       	cpi	r24, 0x64	; 100
 310:	09 f0       	breq	.+2      	; 0x314 <GPIO_READ_PIN+0x34>
 312:	52 c0       	rjmp	.+164    	; 0x3b8 <GPIO_READ_PIN+0xd8>
 314:	3c c0       	rjmp	.+120    	; 0x38e <GPIO_READ_PIN+0xae>
		case 'A':
		case 'a':
			x=READ_BIT(XPINA,pinnum);
 316:	89 b3       	in	r24, 0x19	; 25
 318:	41 e0       	ldi	r20, 0x01	; 1
 31a:	50 e0       	ldi	r21, 0x00	; 0
 31c:	9a 01       	movw	r18, r20
 31e:	06 2e       	mov	r0, r22
 320:	02 c0       	rjmp	.+4      	; 0x326 <GPIO_READ_PIN+0x46>
 322:	22 0f       	add	r18, r18
 324:	33 1f       	adc	r19, r19
 326:	0a 94       	dec	r0
 328:	e2 f7       	brpl	.-8      	; 0x322 <GPIO_READ_PIN+0x42>
 32a:	28 23       	and	r18, r24
 32c:	29 bb       	out	0x19, r18	; 25
 32e:	82 2f       	mov	r24, r18
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	02 c0       	rjmp	.+4      	; 0x338 <GPIO_READ_PIN+0x58>
 334:	95 95       	asr	r25
 336:	87 95       	ror	r24
 338:	6a 95       	dec	r22
 33a:	e2 f7       	brpl	.-8      	; 0x334 <GPIO_READ_PIN+0x54>
			break;
 33c:	08 95       	ret
		case 'B':
		case 'b':
			x=READ_BIT(XPINB,pinnum);
 33e:	86 b3       	in	r24, 0x16	; 22
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	50 e0       	ldi	r21, 0x00	; 0
 344:	9a 01       	movw	r18, r20
 346:	06 2e       	mov	r0, r22
 348:	02 c0       	rjmp	.+4      	; 0x34e <GPIO_READ_PIN+0x6e>
 34a:	22 0f       	add	r18, r18
 34c:	33 1f       	adc	r19, r19
 34e:	0a 94       	dec	r0
 350:	e2 f7       	brpl	.-8      	; 0x34a <GPIO_READ_PIN+0x6a>
 352:	28 23       	and	r18, r24
 354:	26 bb       	out	0x16, r18	; 22
 356:	82 2f       	mov	r24, r18
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	02 c0       	rjmp	.+4      	; 0x360 <GPIO_READ_PIN+0x80>
 35c:	95 95       	asr	r25
 35e:	87 95       	ror	r24
 360:	6a 95       	dec	r22
 362:	e2 f7       	brpl	.-8      	; 0x35c <GPIO_READ_PIN+0x7c>
			break;
 364:	08 95       	ret
		case 'C':
		case 'c':
			x=READ_BIT(XPINB,pinnum);
 366:	86 b3       	in	r24, 0x16	; 22
 368:	41 e0       	ldi	r20, 0x01	; 1
 36a:	50 e0       	ldi	r21, 0x00	; 0
 36c:	9a 01       	movw	r18, r20
 36e:	06 2e       	mov	r0, r22
 370:	02 c0       	rjmp	.+4      	; 0x376 <GPIO_READ_PIN+0x96>
 372:	22 0f       	add	r18, r18
 374:	33 1f       	adc	r19, r19
 376:	0a 94       	dec	r0
 378:	e2 f7       	brpl	.-8      	; 0x372 <GPIO_READ_PIN+0x92>
 37a:	28 23       	and	r18, r24
 37c:	26 bb       	out	0x16, r18	; 22
 37e:	82 2f       	mov	r24, r18
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	02 c0       	rjmp	.+4      	; 0x388 <GPIO_READ_PIN+0xa8>
 384:	95 95       	asr	r25
 386:	87 95       	ror	r24
 388:	6a 95       	dec	r22
 38a:	e2 f7       	brpl	.-8      	; 0x384 <GPIO_READ_PIN+0xa4>
			break;
 38c:	08 95       	ret
		case 'D':
		case 'd':
			x=READ_BIT(XPIND,pinnum);
 38e:	20 b3       	in	r18, 0x10	; 16
 390:	e1 e0       	ldi	r30, 0x01	; 1
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	af 01       	movw	r20, r30
 396:	06 2e       	mov	r0, r22
 398:	02 c0       	rjmp	.+4      	; 0x39e <GPIO_READ_PIN+0xbe>
 39a:	44 0f       	add	r20, r20
 39c:	55 1f       	adc	r21, r21
 39e:	0a 94       	dec	r0
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <GPIO_READ_PIN+0xba>
 3a2:	42 23       	and	r20, r18
 3a4:	40 bb       	out	0x10, r20	; 16
 3a6:	24 2f       	mov	r18, r20
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	c9 01       	movw	r24, r18
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <GPIO_READ_PIN+0xd2>
 3ae:	95 95       	asr	r25
 3b0:	87 95       	ror	r24
 3b2:	6a 95       	dec	r22
 3b4:	e2 f7       	brpl	.-8      	; 0x3ae <GPIO_READ_PIN+0xce>
			break;	
 3b6:	08 95       	ret
	}
	
	
	}
u8 GPIO_READ_PIN(u8 port,u8 pinnum){
	u8 x=0;
 3b8:	80 e0       	ldi	r24, 0x00	; 0
			break;	
			default: break;
					
	}
	return x;
}
 3ba:	08 95       	ret

000003bc <GPIO_TOGGLE_PIN>:

void GPIO_TOGGLE_PIN(u8 port,u8 pinnum){
	switch(port){
 3bc:	84 34       	cpi	r24, 0x44	; 68
 3be:	09 f4       	brne	.+2      	; 0x3c2 <GPIO_TOGGLE_PIN+0x6>
 3c0:	3d c0       	rjmp	.+122    	; 0x43c <GPIO_TOGGLE_PIN+0x80>
 3c2:	85 34       	cpi	r24, 0x45	; 69
 3c4:	40 f4       	brcc	.+16     	; 0x3d6 <GPIO_TOGGLE_PIN+0x1a>
 3c6:	82 34       	cpi	r24, 0x42	; 66
 3c8:	f9 f0       	breq	.+62     	; 0x408 <GPIO_TOGGLE_PIN+0x4c>
 3ca:	83 34       	cpi	r24, 0x43	; 67
 3cc:	50 f5       	brcc	.+84     	; 0x422 <GPIO_TOGGLE_PIN+0x66>
 3ce:	81 34       	cpi	r24, 0x41	; 65
 3d0:	09 f0       	breq	.+2      	; 0x3d4 <GPIO_TOGGLE_PIN+0x18>
 3d2:	40 c0       	rjmp	.+128    	; 0x454 <GPIO_TOGGLE_PIN+0x98>
 3d4:	0c c0       	rjmp	.+24     	; 0x3ee <GPIO_TOGGLE_PIN+0x32>
 3d6:	82 36       	cpi	r24, 0x62	; 98
 3d8:	b9 f0       	breq	.+46     	; 0x408 <GPIO_TOGGLE_PIN+0x4c>
 3da:	83 36       	cpi	r24, 0x63	; 99
 3dc:	18 f4       	brcc	.+6      	; 0x3e4 <GPIO_TOGGLE_PIN+0x28>
 3de:	81 36       	cpi	r24, 0x61	; 97
 3e0:	c9 f5       	brne	.+114    	; 0x454 <GPIO_TOGGLE_PIN+0x98>
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <GPIO_TOGGLE_PIN+0x32>
 3e4:	83 36       	cpi	r24, 0x63	; 99
 3e6:	e9 f0       	breq	.+58     	; 0x422 <GPIO_TOGGLE_PIN+0x66>
 3e8:	84 36       	cpi	r24, 0x64	; 100
 3ea:	a1 f5       	brne	.+104    	; 0x454 <GPIO_TOGGLE_PIN+0x98>
 3ec:	27 c0       	rjmp	.+78     	; 0x43c <GPIO_TOGGLE_PIN+0x80>
		case 'A':
		case 'a':
		TOGGLE_BIT(XPORTA,pinnum);
 3ee:	2b b3       	in	r18, 0x1b	; 27
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	ac 01       	movw	r20, r24
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <GPIO_TOGGLE_PIN+0x40>
 3f8:	44 0f       	add	r20, r20
 3fa:	55 1f       	adc	r21, r21
 3fc:	6a 95       	dec	r22
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <GPIO_TOGGLE_PIN+0x3c>
 400:	ba 01       	movw	r22, r20
 402:	62 27       	eor	r22, r18
 404:	6b bb       	out	0x1b, r22	; 27
		break;
 406:	08 95       	ret
		case 'B':
		case 'b':
		TOGGLE_BIT(XPORTB,pinnum);
 408:	28 b3       	in	r18, 0x18	; 24
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	ac 01       	movw	r20, r24
 410:	02 c0       	rjmp	.+4      	; 0x416 <GPIO_TOGGLE_PIN+0x5a>
 412:	44 0f       	add	r20, r20
 414:	55 1f       	adc	r21, r21
 416:	6a 95       	dec	r22
 418:	e2 f7       	brpl	.-8      	; 0x412 <GPIO_TOGGLE_PIN+0x56>
 41a:	ba 01       	movw	r22, r20
 41c:	62 27       	eor	r22, r18
 41e:	68 bb       	out	0x18, r22	; 24
		break;
 420:	08 95       	ret
		case 'C':
		case 'c':
		TOGGLE_BIT(XPORTB,pinnum);
 422:	28 b3       	in	r18, 0x18	; 24
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	ac 01       	movw	r20, r24
 42a:	02 c0       	rjmp	.+4      	; 0x430 <GPIO_TOGGLE_PIN+0x74>
 42c:	44 0f       	add	r20, r20
 42e:	55 1f       	adc	r21, r21
 430:	6a 95       	dec	r22
 432:	e2 f7       	brpl	.-8      	; 0x42c <GPIO_TOGGLE_PIN+0x70>
 434:	ba 01       	movw	r22, r20
 436:	62 27       	eor	r22, r18
 438:	68 bb       	out	0x18, r22	; 24
		break;
 43a:	08 95       	ret
		case 'D':
		case 'd':
		TOGGLE_BIT(XPORTD,pinnum);
 43c:	22 b3       	in	r18, 0x12	; 18
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	ac 01       	movw	r20, r24
 444:	02 c0       	rjmp	.+4      	; 0x44a <GPIO_TOGGLE_PIN+0x8e>
 446:	44 0f       	add	r20, r20
 448:	55 1f       	adc	r21, r21
 44a:	6a 95       	dec	r22
 44c:	e2 f7       	brpl	.-8      	; 0x446 <GPIO_TOGGLE_PIN+0x8a>
 44e:	ba 01       	movw	r22, r20
 450:	62 27       	eor	r22, r18
 452:	62 bb       	out	0x12, r22	; 18
 454:	08 95       	ret

00000456 <GPIO_CONNECT_PULLUP>:
	}		
}

void GPIO_CONNECT_PULLUP(u8 port,u8 pinnum,u8 connect_pullup){
	//***************************************
}
 456:	08 95       	ret

00000458 <GPIO_SETPORT_DIR>:

//**********************PORT********************
void GPIO_SETPORT_DIR(u8 port,u8 dir){
	if(dir==1){
 458:	61 30       	cpi	r22, 0x01	; 1
 45a:	19 f5       	brne	.+70     	; 0x4a2 <GPIO_SETPORT_DIR+0x4a>
	switch(port){
 45c:	84 34       	cpi	r24, 0x44	; 68
 45e:	f1 f0       	breq	.+60     	; 0x49c <GPIO_SETPORT_DIR+0x44>
 460:	85 34       	cpi	r24, 0x45	; 69
 462:	38 f4       	brcc	.+14     	; 0x472 <GPIO_SETPORT_DIR+0x1a>
 464:	82 34       	cpi	r24, 0x42	; 66
 466:	a1 f0       	breq	.+40     	; 0x490 <GPIO_SETPORT_DIR+0x38>
 468:	83 34       	cpi	r24, 0x43	; 67
 46a:	a8 f4       	brcc	.+42     	; 0x496 <GPIO_SETPORT_DIR+0x3e>
 46c:	81 34       	cpi	r24, 0x41	; 65
 46e:	b9 f5       	brne	.+110    	; 0x4de <GPIO_SETPORT_DIR+0x86>
 470:	0c c0       	rjmp	.+24     	; 0x48a <GPIO_SETPORT_DIR+0x32>
 472:	82 36       	cpi	r24, 0x62	; 98
 474:	69 f0       	breq	.+26     	; 0x490 <GPIO_SETPORT_DIR+0x38>
 476:	83 36       	cpi	r24, 0x63	; 99
 478:	18 f4       	brcc	.+6      	; 0x480 <GPIO_SETPORT_DIR+0x28>
 47a:	81 36       	cpi	r24, 0x61	; 97
 47c:	81 f5       	brne	.+96     	; 0x4de <GPIO_SETPORT_DIR+0x86>
 47e:	05 c0       	rjmp	.+10     	; 0x48a <GPIO_SETPORT_DIR+0x32>
 480:	83 36       	cpi	r24, 0x63	; 99
 482:	49 f0       	breq	.+18     	; 0x496 <GPIO_SETPORT_DIR+0x3e>
 484:	84 36       	cpi	r24, 0x64	; 100
 486:	59 f5       	brne	.+86     	; 0x4de <GPIO_SETPORT_DIR+0x86>
 488:	09 c0       	rjmp	.+18     	; 0x49c <GPIO_SETPORT_DIR+0x44>
		case 'A':
		case 'a':
			XDDRA=0xff;
 48a:	8f ef       	ldi	r24, 0xFF	; 255
 48c:	8a bb       	out	0x1a, r24	; 26
		break;
 48e:	08 95       	ret
		case 'B':
		case 'b':
			XDDRB=0xff;
 490:	8f ef       	ldi	r24, 0xFF	; 255
 492:	87 bb       	out	0x17, r24	; 23
		break;
 494:	08 95       	ret
		case 'C':
		case 'c':
			XDDRC=0xff;
 496:	8f ef       	ldi	r24, 0xFF	; 255
 498:	84 bb       	out	0x14, r24	; 20
		break;
 49a:	08 95       	ret
		case 'D':
		case 'd':
			XDDRD=0xff;
 49c:	8f ef       	ldi	r24, 0xFF	; 255
 49e:	81 bb       	out	0x11, r24	; 17
		break;
 4a0:	08 95       	ret
		default: break;
		}
	}
	else{
		switch(port){
 4a2:	84 34       	cpi	r24, 0x44	; 68
 4a4:	d9 f0       	breq	.+54     	; 0x4dc <GPIO_SETPORT_DIR+0x84>
 4a6:	85 34       	cpi	r24, 0x45	; 69
 4a8:	38 f4       	brcc	.+14     	; 0x4b8 <GPIO_SETPORT_DIR+0x60>
 4aa:	82 34       	cpi	r24, 0x42	; 66
 4ac:	99 f0       	breq	.+38     	; 0x4d4 <GPIO_SETPORT_DIR+0x7c>
 4ae:	83 34       	cpi	r24, 0x43	; 67
 4b0:	98 f4       	brcc	.+38     	; 0x4d8 <GPIO_SETPORT_DIR+0x80>
 4b2:	81 34       	cpi	r24, 0x41	; 65
 4b4:	a1 f4       	brne	.+40     	; 0x4de <GPIO_SETPORT_DIR+0x86>
 4b6:	0c c0       	rjmp	.+24     	; 0x4d0 <GPIO_SETPORT_DIR+0x78>
 4b8:	82 36       	cpi	r24, 0x62	; 98
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <GPIO_SETPORT_DIR+0x7c>
 4bc:	83 36       	cpi	r24, 0x63	; 99
 4be:	18 f4       	brcc	.+6      	; 0x4c6 <GPIO_SETPORT_DIR+0x6e>
 4c0:	81 36       	cpi	r24, 0x61	; 97
 4c2:	69 f4       	brne	.+26     	; 0x4de <GPIO_SETPORT_DIR+0x86>
 4c4:	05 c0       	rjmp	.+10     	; 0x4d0 <GPIO_SETPORT_DIR+0x78>
 4c6:	83 36       	cpi	r24, 0x63	; 99
 4c8:	39 f0       	breq	.+14     	; 0x4d8 <GPIO_SETPORT_DIR+0x80>
 4ca:	84 36       	cpi	r24, 0x64	; 100
 4cc:	41 f4       	brne	.+16     	; 0x4de <GPIO_SETPORT_DIR+0x86>
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <GPIO_SETPORT_DIR+0x84>
			case 'A':
			case 'a':
			XDDRA=0x00;
 4d0:	1a ba       	out	0x1a, r1	; 26
			break;
 4d2:	08 95       	ret
			case 'B':
			case 'b':
			XDDRB=0x00;
 4d4:	17 ba       	out	0x17, r1	; 23
			break;
 4d6:	08 95       	ret
			case 'C':
			case 'c':
			XDDRC=0x00;
 4d8:	14 ba       	out	0x14, r1	; 20
			break;
 4da:	08 95       	ret
			case 'D':
			case 'd':
			XDDRD=0x00;
 4dc:	11 ba       	out	0x11, r1	; 17
 4de:	08 95       	ret

000004e0 <GPIO_WRITE_PORT>:
	}
		
}

void GPIO_WRITE_PORT(u8 port,u8 val){
	switch(port){
 4e0:	84 34       	cpi	r24, 0x44	; 68
 4e2:	d9 f0       	breq	.+54     	; 0x51a <GPIO_WRITE_PORT+0x3a>
 4e4:	85 34       	cpi	r24, 0x45	; 69
 4e6:	38 f4       	brcc	.+14     	; 0x4f6 <GPIO_WRITE_PORT+0x16>
 4e8:	82 34       	cpi	r24, 0x42	; 66
 4ea:	99 f0       	breq	.+38     	; 0x512 <GPIO_WRITE_PORT+0x32>
 4ec:	83 34       	cpi	r24, 0x43	; 67
 4ee:	98 f4       	brcc	.+38     	; 0x516 <GPIO_WRITE_PORT+0x36>
 4f0:	81 34       	cpi	r24, 0x41	; 65
 4f2:	a1 f4       	brne	.+40     	; 0x51c <GPIO_WRITE_PORT+0x3c>
 4f4:	0c c0       	rjmp	.+24     	; 0x50e <GPIO_WRITE_PORT+0x2e>
 4f6:	82 36       	cpi	r24, 0x62	; 98
 4f8:	61 f0       	breq	.+24     	; 0x512 <GPIO_WRITE_PORT+0x32>
 4fa:	83 36       	cpi	r24, 0x63	; 99
 4fc:	18 f4       	brcc	.+6      	; 0x504 <GPIO_WRITE_PORT+0x24>
 4fe:	81 36       	cpi	r24, 0x61	; 97
 500:	69 f4       	brne	.+26     	; 0x51c <GPIO_WRITE_PORT+0x3c>
 502:	05 c0       	rjmp	.+10     	; 0x50e <GPIO_WRITE_PORT+0x2e>
 504:	83 36       	cpi	r24, 0x63	; 99
 506:	39 f0       	breq	.+14     	; 0x516 <GPIO_WRITE_PORT+0x36>
 508:	84 36       	cpi	r24, 0x64	; 100
 50a:	41 f4       	brne	.+16     	; 0x51c <GPIO_WRITE_PORT+0x3c>
 50c:	06 c0       	rjmp	.+12     	; 0x51a <GPIO_WRITE_PORT+0x3a>
		case 'A':
		case 'a':
			XPORTA=val;
 50e:	6b bb       	out	0x1b, r22	; 27
			break;
 510:	08 95       	ret
		case 'B':
		case 'b':
			XPORTB=val;
 512:	68 bb       	out	0x18, r22	; 24
			break;
 514:	08 95       	ret
		case 'C':
		case 'c':
			XPORTC=val;
 516:	65 bb       	out	0x15, r22	; 21
			break;
 518:	08 95       	ret
		case 'D':
		case 'd':
			XPORTD=val;
 51a:	62 bb       	out	0x12, r22	; 18
 51c:	08 95       	ret

0000051e <GPIO_HIGH_NIBBLE_SETDIR>:
		}
					
}}

//HIGH NIBBLE
void GPIO_HIGH_NIBBLE_SETDIR(u8 port,u8 dir){
 51e:	cf 93       	push	r28
 520:	c8 2f       	mov	r28, r24
	if(dir==1){
 522:	61 30       	cpi	r22, 0x01	; 1
 524:	a1 f4       	brne	.+40     	; 0x54e <GPIO_HIGH_NIBBLE_SETDIR+0x30>
		GPIO_SETPIN_DIR(port,4,1);
 526:	64 e0       	ldi	r22, 0x04	; 4
 528:	41 e0       	ldi	r20, 0x01	; 1
 52a:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,5,1);
 52e:	8c 2f       	mov	r24, r28
 530:	65 e0       	ldi	r22, 0x05	; 5
 532:	41 e0       	ldi	r20, 0x01	; 1
 534:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,6,1);
 538:	8c 2f       	mov	r24, r28
 53a:	66 e0       	ldi	r22, 0x06	; 6
 53c:	41 e0       	ldi	r20, 0x01	; 1
 53e:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,7,1);
 542:	8c 2f       	mov	r24, r28
 544:	67 e0       	ldi	r22, 0x07	; 7
 546:	41 e0       	ldi	r20, 0x01	; 1
 548:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
 54c:	13 c0       	rjmp	.+38     	; 0x574 <GPIO_HIGH_NIBBLE_SETDIR+0x56>
	}else{
		GPIO_SETPIN_DIR(port,4,0);
 54e:	64 e0       	ldi	r22, 0x04	; 4
 550:	40 e0       	ldi	r20, 0x00	; 0
 552:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,5,0);
 556:	8c 2f       	mov	r24, r28
 558:	65 e0       	ldi	r22, 0x05	; 5
 55a:	40 e0       	ldi	r20, 0x00	; 0
 55c:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,6,0);
 560:	8c 2f       	mov	r24, r28
 562:	66 e0       	ldi	r22, 0x06	; 6
 564:	40 e0       	ldi	r20, 0x00	; 0
 566:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,7,0);
 56a:	8c 2f       	mov	r24, r28
 56c:	67 e0       	ldi	r22, 0x07	; 7
 56e:	40 e0       	ldi	r20, 0x00	; 0
 570:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
	}
}
 574:	cf 91       	pop	r28
 576:	08 95       	ret

00000578 <GPIO_HIGH_NIBBLE_WRITE>:
void GPIO_HIGH_NIBBLE_WRITE(u8 port,u8 value){
	value <<=4;
 578:	62 95       	swap	r22
 57a:	60 7f       	andi	r22, 0xF0	; 240
	switch(port){
 57c:	84 34       	cpi	r24, 0x44	; 68
 57e:	51 f1       	breq	.+84     	; 0x5d4 <GPIO_HIGH_NIBBLE_WRITE+0x5c>
 580:	85 34       	cpi	r24, 0x45	; 69
 582:	38 f4       	brcc	.+14     	; 0x592 <GPIO_HIGH_NIBBLE_WRITE+0x1a>
 584:	82 34       	cpi	r24, 0x42	; 66
 586:	c1 f0       	breq	.+48     	; 0x5b8 <GPIO_HIGH_NIBBLE_WRITE+0x40>
 588:	83 34       	cpi	r24, 0x43	; 67
 58a:	e8 f4       	brcc	.+58     	; 0x5c6 <GPIO_HIGH_NIBBLE_WRITE+0x4e>
 58c:	81 34       	cpi	r24, 0x41	; 65
 58e:	41 f5       	brne	.+80     	; 0x5e0 <GPIO_HIGH_NIBBLE_WRITE+0x68>
 590:	0c c0       	rjmp	.+24     	; 0x5aa <GPIO_HIGH_NIBBLE_WRITE+0x32>
 592:	82 36       	cpi	r24, 0x62	; 98
 594:	89 f0       	breq	.+34     	; 0x5b8 <GPIO_HIGH_NIBBLE_WRITE+0x40>
 596:	83 36       	cpi	r24, 0x63	; 99
 598:	18 f4       	brcc	.+6      	; 0x5a0 <GPIO_HIGH_NIBBLE_WRITE+0x28>
 59a:	81 36       	cpi	r24, 0x61	; 97
 59c:	09 f5       	brne	.+66     	; 0x5e0 <GPIO_HIGH_NIBBLE_WRITE+0x68>
 59e:	05 c0       	rjmp	.+10     	; 0x5aa <GPIO_HIGH_NIBBLE_WRITE+0x32>
 5a0:	83 36       	cpi	r24, 0x63	; 99
 5a2:	89 f0       	breq	.+34     	; 0x5c6 <GPIO_HIGH_NIBBLE_WRITE+0x4e>
 5a4:	84 36       	cpi	r24, 0x64	; 100
 5a6:	e1 f4       	brne	.+56     	; 0x5e0 <GPIO_HIGH_NIBBLE_WRITE+0x68>
 5a8:	15 c0       	rjmp	.+42     	; 0x5d4 <GPIO_HIGH_NIBBLE_WRITE+0x5c>
		case'A':
		case'a':
			XPORTA &=0x0f;
 5aa:	8b b3       	in	r24, 0x1b	; 27
 5ac:	8f 70       	andi	r24, 0x0F	; 15
 5ae:	8b bb       	out	0x1b, r24	; 27
			XPORTA |=value;
 5b0:	8b b3       	in	r24, 0x1b	; 27
 5b2:	68 2b       	or	r22, r24
 5b4:	6b bb       	out	0x1b, r22	; 27
			break;
 5b6:	08 95       	ret
		case'B':
		case'b':
			XPORTB &=0x0f;
 5b8:	88 b3       	in	r24, 0x18	; 24
 5ba:	8f 70       	andi	r24, 0x0F	; 15
 5bc:	88 bb       	out	0x18, r24	; 24
			XPORTB |=value;	
 5be:	88 b3       	in	r24, 0x18	; 24
 5c0:	68 2b       	or	r22, r24
 5c2:	68 bb       	out	0x18, r22	; 24
			break;
 5c4:	08 95       	ret
		case'C':
		case'c':
			XPORTC &=0x0f;
 5c6:	85 b3       	in	r24, 0x15	; 21
 5c8:	8f 70       	andi	r24, 0x0F	; 15
 5ca:	85 bb       	out	0x15, r24	; 21
			XPORTC|=value;
 5cc:	85 b3       	in	r24, 0x15	; 21
 5ce:	68 2b       	or	r22, r24
 5d0:	65 bb       	out	0x15, r22	; 21
			break;
 5d2:	08 95       	ret
		case'D':
		case'd':
			XPORTD&=0x0f;
 5d4:	82 b3       	in	r24, 0x12	; 18
 5d6:	8f 70       	andi	r24, 0x0F	; 15
 5d8:	82 bb       	out	0x12, r24	; 18
			XPORTD |=value;
 5da:	82 b3       	in	r24, 0x12	; 18
 5dc:	68 2b       	or	r22, r24
 5de:	62 bb       	out	0x12, r22	; 18
 5e0:	08 95       	ret

000005e2 <GPIO_LOW_NIBBLE_SETDIR>:
	}	
	
	
}
//LOW NIBBLE
void GPIO_LOW_NIBBLE_SETDIR(u8 port,u8 dir){
 5e2:	cf 93       	push	r28
 5e4:	c8 2f       	mov	r28, r24
	if(dir==1){
 5e6:	61 30       	cpi	r22, 0x01	; 1
 5e8:	a1 f4       	brne	.+40     	; 0x612 <GPIO_LOW_NIBBLE_SETDIR+0x30>
		GPIO_SETPIN_DIR(port,0,1);
 5ea:	60 e0       	ldi	r22, 0x00	; 0
 5ec:	41 e0       	ldi	r20, 0x01	; 1
 5ee:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,1,1);
 5f2:	8c 2f       	mov	r24, r28
 5f4:	61 e0       	ldi	r22, 0x01	; 1
 5f6:	41 e0       	ldi	r20, 0x01	; 1
 5f8:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,2,1);
 5fc:	8c 2f       	mov	r24, r28
 5fe:	62 e0       	ldi	r22, 0x02	; 2
 600:	41 e0       	ldi	r20, 0x01	; 1
 602:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,3,1);
 606:	8c 2f       	mov	r24, r28
 608:	63 e0       	ldi	r22, 0x03	; 3
 60a:	41 e0       	ldi	r20, 0x01	; 1
 60c:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
 610:	13 c0       	rjmp	.+38     	; 0x638 <GPIO_LOW_NIBBLE_SETDIR+0x56>
	}else{
		GPIO_SETPIN_DIR(port,0,0);
 612:	60 e0       	ldi	r22, 0x00	; 0
 614:	40 e0       	ldi	r20, 0x00	; 0
 616:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,1,0);
 61a:	8c 2f       	mov	r24, r28
 61c:	61 e0       	ldi	r22, 0x01	; 1
 61e:	40 e0       	ldi	r20, 0x00	; 0
 620:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,2,0);
 624:	8c 2f       	mov	r24, r28
 626:	62 e0       	ldi	r22, 0x02	; 2
 628:	40 e0       	ldi	r20, 0x00	; 0
 62a:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
		GPIO_SETPIN_DIR(port,3,0);
 62e:	8c 2f       	mov	r24, r28
 630:	63 e0       	ldi	r22, 0x03	; 3
 632:	40 e0       	ldi	r20, 0x00	; 0
 634:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
	}	
}
 638:	cf 91       	pop	r28
 63a:	08 95       	ret

0000063c <GPIO_LOW_NIBBLE_WRITE>:
void GPIO_LOW_NIBBLE_WRITE(u8 port,u8 value){
	value &=0x0f;
 63c:	6f 70       	andi	r22, 0x0F	; 15
	switch(port){
 63e:	84 34       	cpi	r24, 0x44	; 68
 640:	51 f1       	breq	.+84     	; 0x696 <GPIO_LOW_NIBBLE_WRITE+0x5a>
 642:	85 34       	cpi	r24, 0x45	; 69
 644:	38 f4       	brcc	.+14     	; 0x654 <GPIO_LOW_NIBBLE_WRITE+0x18>
 646:	82 34       	cpi	r24, 0x42	; 66
 648:	c1 f0       	breq	.+48     	; 0x67a <GPIO_LOW_NIBBLE_WRITE+0x3e>
 64a:	83 34       	cpi	r24, 0x43	; 67
 64c:	e8 f4       	brcc	.+58     	; 0x688 <GPIO_LOW_NIBBLE_WRITE+0x4c>
 64e:	81 34       	cpi	r24, 0x41	; 65
 650:	41 f5       	brne	.+80     	; 0x6a2 <GPIO_LOW_NIBBLE_WRITE+0x66>
 652:	0c c0       	rjmp	.+24     	; 0x66c <GPIO_LOW_NIBBLE_WRITE+0x30>
 654:	82 36       	cpi	r24, 0x62	; 98
 656:	89 f0       	breq	.+34     	; 0x67a <GPIO_LOW_NIBBLE_WRITE+0x3e>
 658:	83 36       	cpi	r24, 0x63	; 99
 65a:	18 f4       	brcc	.+6      	; 0x662 <GPIO_LOW_NIBBLE_WRITE+0x26>
 65c:	81 36       	cpi	r24, 0x61	; 97
 65e:	09 f5       	brne	.+66     	; 0x6a2 <GPIO_LOW_NIBBLE_WRITE+0x66>
 660:	05 c0       	rjmp	.+10     	; 0x66c <GPIO_LOW_NIBBLE_WRITE+0x30>
 662:	83 36       	cpi	r24, 0x63	; 99
 664:	89 f0       	breq	.+34     	; 0x688 <GPIO_LOW_NIBBLE_WRITE+0x4c>
 666:	84 36       	cpi	r24, 0x64	; 100
 668:	e1 f4       	brne	.+56     	; 0x6a2 <GPIO_LOW_NIBBLE_WRITE+0x66>
 66a:	15 c0       	rjmp	.+42     	; 0x696 <GPIO_LOW_NIBBLE_WRITE+0x5a>
		case'A':
		case'a':
			XPORTA &=0xf0;
 66c:	8b b3       	in	r24, 0x1b	; 27
 66e:	80 7f       	andi	r24, 0xF0	; 240
 670:	8b bb       	out	0x1b, r24	; 27
			XPORTA |=value;
 672:	8b b3       	in	r24, 0x1b	; 27
 674:	68 2b       	or	r22, r24
 676:	6b bb       	out	0x1b, r22	; 27
			break;
 678:	08 95       	ret
		case'B':
		case'b':
			XPORTB &=0xf0;
 67a:	88 b3       	in	r24, 0x18	; 24
 67c:	80 7f       	andi	r24, 0xF0	; 240
 67e:	88 bb       	out	0x18, r24	; 24
			XPORTB |=value;
 680:	88 b3       	in	r24, 0x18	; 24
 682:	68 2b       	or	r22, r24
 684:	68 bb       	out	0x18, r22	; 24
			break;
 686:	08 95       	ret
		case'C':
		case'c':
			XPORTC &=0xf0;
 688:	85 b3       	in	r24, 0x15	; 21
 68a:	80 7f       	andi	r24, 0xF0	; 240
 68c:	85 bb       	out	0x15, r24	; 21
			XPORTC|=value;
 68e:	85 b3       	in	r24, 0x15	; 21
 690:	68 2b       	or	r22, r24
 692:	65 bb       	out	0x15, r22	; 21
			break;
 694:	08 95       	ret
		case'D':
		case'd':
			XPORTD&=0xf0;
 696:	82 b3       	in	r24, 0x12	; 18
 698:	80 7f       	andi	r24, 0xF0	; 240
 69a:	82 bb       	out	0x12, r24	; 18
			XPORTD |=value;
 69c:	82 b3       	in	r24, 0x12	; 18
 69e:	68 2b       	or	r22, r24
 6a0:	62 bb       	out	0x12, r22	; 18
 6a2:	08 95       	ret

000006a4 <ENABLE_SET>:
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_ENTRY_MODE, en_port, en_pin);
			_delay_ms(1);
		}
	}
}
static void ENABLE_SET(u8 en_port,u8 en_pin){
 6a4:	cf 93       	push	r28
 6a6:	df 93       	push	r29
 6a8:	d8 2f       	mov	r29, r24
 6aa:	c6 2f       	mov	r28, r22
	GPIO_WRITE_PIN(en_port,en_pin,1);
 6ac:	41 e0       	ldi	r20, 0x01	; 1
 6ae:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6b2:	8f e9       	ldi	r24, 0x9F	; 159
 6b4:	9f e0       	ldi	r25, 0x0F	; 15
 6b6:	01 97       	sbiw	r24, 0x01	; 1
 6b8:	f1 f7       	brne	.-4      	; 0x6b6 <ENABLE_SET+0x12>
 6ba:	00 c0       	rjmp	.+0      	; 0x6bc <ENABLE_SET+0x18>
 6bc:	00 00       	nop
	_delay_ms(2);
	GPIO_WRITE_PIN(en_port,en_pin,0);
 6be:	8d 2f       	mov	r24, r29
 6c0:	6c 2f       	mov	r22, r28
 6c2:	40 e0       	ldi	r20, 0x00	; 0
 6c4:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
}
 6c8:	df 91       	pop	r29
 6ca:	cf 91       	pop	r28
 6cc:	08 95       	ret

000006ce <LCD_SEND_CMD>:
void LCD_SEND_CMD(u8 mode,u8 nibble,u8 port,u8 rs_port,u8 rs_pin,u8 cmd,u8 en_port,u8 en_pin){
 6ce:	af 92       	push	r10
 6d0:	cf 92       	push	r12
 6d2:	ef 92       	push	r14
 6d4:	0f 93       	push	r16
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	c4 2f       	mov	r28, r20
 6dc:	d2 2f       	mov	r29, r18
	if(mode==1){
 6de:	81 30       	cpi	r24, 0x01	; 1
 6e0:	71 f4       	brne	.+28     	; 0x6fe <LCD_SEND_CMD+0x30>
		GPIO_WRITE_PORT(port,cmd);
 6e2:	84 2f       	mov	r24, r20
 6e4:	6e 2d       	mov	r22, r14
 6e6:	0e 94 70 02 	call	0x4e0	; 0x4e0 <GPIO_WRITE_PORT>
		GPIO_WRITE_PIN(rs_port,rs_pin,0);
 6ea:	8d 2f       	mov	r24, r29
 6ec:	60 2f       	mov	r22, r16
 6ee:	40 e0       	ldi	r20, 0x00	; 0
 6f0:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
		ENABLE_SET(en_port,en_pin);
 6f4:	8c 2d       	mov	r24, r12
 6f6:	6a 2d       	mov	r22, r10
 6f8:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
 6fc:	47 c0       	rjmp	.+142    	; 0x78c <LCD_SEND_CMD+0xbe>
	}else{
		if(nibble==1){
 6fe:	61 30       	cpi	r22, 0x01	; 1
 700:	19 f5       	brne	.+70     	; 0x748 <LCD_SEND_CMD+0x7a>
			GPIO_HIGH_NIBBLE_WRITE(port,cmd>>4);
 702:	6e 2d       	mov	r22, r14
 704:	62 95       	swap	r22
 706:	6f 70       	andi	r22, 0x0F	; 15
 708:	84 2f       	mov	r24, r20
 70a:	0e 94 bc 02 	call	0x578	; 0x578 <GPIO_HIGH_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 70e:	8d 2f       	mov	r24, r29
 710:	60 2f       	mov	r22, r16
 712:	40 e0       	ldi	r20, 0x00	; 0
 714:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 718:	8c 2d       	mov	r24, r12
 71a:	6a 2d       	mov	r22, r10
 71c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
			GPIO_HIGH_NIBBLE_WRITE(port,cmd);
 720:	8c 2f       	mov	r24, r28
 722:	6e 2d       	mov	r22, r14
 724:	0e 94 bc 02 	call	0x578	; 0x578 <GPIO_HIGH_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 728:	8d 2f       	mov	r24, r29
 72a:	60 2f       	mov	r22, r16
 72c:	40 e0       	ldi	r20, 0x00	; 0
 72e:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 732:	8c 2d       	mov	r24, r12
 734:	6a 2d       	mov	r22, r10
 736:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
 73a:	8f ec       	ldi	r24, 0xCF	; 207
 73c:	97 e0       	ldi	r25, 0x07	; 7
 73e:	01 97       	sbiw	r24, 0x01	; 1
 740:	f1 f7       	brne	.-4      	; 0x73e <LCD_SEND_CMD+0x70>
 742:	00 c0       	rjmp	.+0      	; 0x744 <LCD_SEND_CMD+0x76>
 744:	00 00       	nop
 746:	22 c0       	rjmp	.+68     	; 0x78c <LCD_SEND_CMD+0xbe>
			_delay_ms(1);
		}else{
			GPIO_LOW_NIBBLE_WRITE(port,cmd>>4);
 748:	6e 2d       	mov	r22, r14
 74a:	62 95       	swap	r22
 74c:	6f 70       	andi	r22, 0x0F	; 15
 74e:	84 2f       	mov	r24, r20
 750:	0e 94 1e 03 	call	0x63c	; 0x63c <GPIO_LOW_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 754:	8d 2f       	mov	r24, r29
 756:	60 2f       	mov	r22, r16
 758:	40 e0       	ldi	r20, 0x00	; 0
 75a:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 75e:	8c 2d       	mov	r24, r12
 760:	6a 2d       	mov	r22, r10
 762:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
			GPIO_HIGH_NIBBLE_WRITE(port,cmd);
 766:	8c 2f       	mov	r24, r28
 768:	6e 2d       	mov	r22, r14
 76a:	0e 94 bc 02 	call	0x578	; 0x578 <GPIO_HIGH_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 76e:	8d 2f       	mov	r24, r29
 770:	60 2f       	mov	r22, r16
 772:	40 e0       	ldi	r20, 0x00	; 0
 774:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 778:	8c 2d       	mov	r24, r12
 77a:	6a 2d       	mov	r22, r10
 77c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
 780:	8f ec       	ldi	r24, 0xCF	; 207
 782:	97 e0       	ldi	r25, 0x07	; 7
 784:	01 97       	sbiw	r24, 0x01	; 1
 786:	f1 f7       	brne	.-4      	; 0x784 <LCD_SEND_CMD+0xb6>
 788:	00 c0       	rjmp	.+0      	; 0x78a <LCD_SEND_CMD+0xbc>
 78a:	00 00       	nop
			_delay_ms(1);
		}
	}
}
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	0f 91       	pop	r16
 792:	ef 90       	pop	r14
 794:	cf 90       	pop	r12
 796:	af 90       	pop	r10
 798:	08 95       	ret

0000079a <LCD_INIT>:
#include "GPIO_MCAL.h"
#include "LCD.h"
#define F_CPU 8000000UL
#include <util//delay.h>

void LCD_INIT(u8 mode,u8 nibble,u8 port,u8 rs_port,u8 rs_pin,u8 rw_port,u8 rw_pin,u8 en_port,u8 en_pin){
 79a:	7f 92       	push	r7
 79c:	8f 92       	push	r8
 79e:	9f 92       	push	r9
 7a0:	af 92       	push	r10
 7a2:	bf 92       	push	r11
 7a4:	cf 92       	push	r12
 7a6:	df 92       	push	r13
 7a8:	ef 92       	push	r14
 7aa:	ff 92       	push	r15
 7ac:	0f 93       	push	r16
 7ae:	1f 93       	push	r17
 7b0:	cf 93       	push	r28
 7b2:	df 93       	push	r29
 7b4:	cd b7       	in	r28, 0x3d	; 61
 7b6:	de b7       	in	r29, 0x3e	; 62
 7b8:	18 2f       	mov	r17, r24
 7ba:	f6 2e       	mov	r15, r22
 7bc:	74 2e       	mov	r7, r20
 7be:	92 2e       	mov	r9, r18
 7c0:	8f ef       	ldi	r24, 0xFF	; 255
 7c2:	91 ee       	ldi	r25, 0xE1	; 225
 7c4:	a4 e0       	ldi	r26, 0x04	; 4
 7c6:	81 50       	subi	r24, 0x01	; 1
 7c8:	90 40       	sbci	r25, 0x00	; 0
 7ca:	a0 40       	sbci	r26, 0x00	; 0
 7cc:	e1 f7       	brne	.-8      	; 0x7c6 <LCD_INIT+0x2c>
 7ce:	00 c0       	rjmp	.+0      	; 0x7d0 <LCD_INIT+0x36>
 7d0:	00 00       	nop
	_delay_ms(200);
	GPIO_SETPIN_DIR(rs_port,rs_pin,1);
 7d2:	82 2f       	mov	r24, r18
 7d4:	60 2f       	mov	r22, r16
 7d6:	41 e0       	ldi	r20, 0x01	; 1
 7d8:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
	GPIO_SETPIN_DIR(rw_port,rw_pin,1);
 7dc:	8e 2d       	mov	r24, r14
 7de:	6c 2d       	mov	r22, r12
 7e0:	41 e0       	ldi	r20, 0x01	; 1
 7e2:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
	GPIO_SETPIN_DIR(en_port,en_pin,1);
 7e6:	8a 2d       	mov	r24, r10
 7e8:	68 2d       	mov	r22, r8
 7ea:	41 e0       	ldi	r20, 0x01	; 1
 7ec:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
	if(mode==1){
 7f0:	11 30       	cpi	r17, 0x01	; 1
 7f2:	09 f0       	breq	.+2      	; 0x7f6 <LCD_INIT+0x5c>
 7f4:	50 c0       	rjmp	.+160    	; 0x896 <__stack+0x37>
		GPIO_SETPORT_DIR(port,0xff);
 7f6:	87 2d       	mov	r24, r7
 7f8:	6f ef       	ldi	r22, 0xFF	; 255
 7fa:	0e 94 2c 02 	call	0x458	; 0x458 <GPIO_SETPORT_DIR>
		GPIO_WRITE_PIN(rw_port,rw_pin,0);
 7fe:	8e 2d       	mov	r24, r14
 800:	6c 2d       	mov	r22, r12
 802:	40 e0       	ldi	r20, 0x00	; 0
 804:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
 808:	af e2       	ldi	r26, 0x2F	; 47
 80a:	b5 e7       	ldi	r27, 0x75	; 117
 80c:	11 97       	sbiw	r26, 0x01	; 1
 80e:	f1 f7       	brne	.-4      	; 0x80c <LCD_INIT+0x72>
 810:	00 c0       	rjmp	.+0      	; 0x812 <LCD_INIT+0x78>
 812:	00 00       	nop
		_delay_ms(15);
		LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_FUNCTION_8BIT_2LINES, en_port, en_pin);
 814:	81 e0       	ldi	r24, 0x01	; 1
 816:	6f 2d       	mov	r22, r15
 818:	47 2d       	mov	r20, r7
 81a:	29 2d       	mov	r18, r9
 81c:	0f 2e       	mov	r0, r31
 81e:	f8 e3       	ldi	r31, 0x38	; 56
 820:	ef 2e       	mov	r14, r31
 822:	f0 2d       	mov	r31, r0
 824:	ca 2c       	mov	r12, r10
 826:	a8 2c       	mov	r10, r8
 828:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 82c:	8f ec       	ldi	r24, 0xCF	; 207
 82e:	97 e0       	ldi	r25, 0x07	; 7
 830:	01 97       	sbiw	r24, 0x01	; 1
 832:	f1 f7       	brne	.-4      	; 0x830 <LCD_INIT+0x96>
 834:	00 c0       	rjmp	.+0      	; 0x836 <LCD_INIT+0x9c>
 836:	00 00       	nop
		_delay_ms(1);
		LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_DISP_ON_CURSOR_ON, en_port, en_pin);
 838:	81 e0       	ldi	r24, 0x01	; 1
 83a:	6f 2d       	mov	r22, r15
 83c:	47 2d       	mov	r20, r7
 83e:	29 2d       	mov	r18, r9
 840:	0f 2e       	mov	r0, r31
 842:	fe e0       	ldi	r31, 0x0E	; 14
 844:	ef 2e       	mov	r14, r31
 846:	f0 2d       	mov	r31, r0
 848:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 84c:	af ec       	ldi	r26, 0xCF	; 207
 84e:	b7 e0       	ldi	r27, 0x07	; 7
 850:	11 97       	sbiw	r26, 0x01	; 1
 852:	f1 f7       	brne	.-4      	; 0x850 <LCD_INIT+0xb6>
 854:	00 c0       	rjmp	.+0      	; 0x856 <LCD_INIT+0xbc>
 856:	00 00       	nop
		_delay_ms(1);
		LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_CLEAR_SCREEN, en_port, en_pin);
 858:	81 e0       	ldi	r24, 0x01	; 1
 85a:	6f 2d       	mov	r22, r15
 85c:	47 2d       	mov	r20, r7
 85e:	29 2d       	mov	r18, r9
 860:	ee 24       	eor	r14, r14
 862:	e3 94       	inc	r14
 864:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 868:	8f e1       	ldi	r24, 0x1F	; 31
 86a:	9e e4       	ldi	r25, 0x4E	; 78
 86c:	01 97       	sbiw	r24, 0x01	; 1
 86e:	f1 f7       	brne	.-4      	; 0x86c <__stack+0xd>
 870:	00 c0       	rjmp	.+0      	; 0x872 <__stack+0x13>
 872:	00 00       	nop
		_delay_ms(10);
		LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_ENTRY_MODE, en_port, en_pin);
 874:	81 e0       	ldi	r24, 0x01	; 1
 876:	6f 2d       	mov	r22, r15
 878:	47 2d       	mov	r20, r7
 87a:	29 2d       	mov	r18, r9
 87c:	0f 2e       	mov	r0, r31
 87e:	f6 e0       	ldi	r31, 0x06	; 6
 880:	ef 2e       	mov	r14, r31
 882:	f0 2d       	mov	r31, r0
 884:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 888:	af ec       	ldi	r26, 0xCF	; 207
 88a:	b7 e0       	ldi	r27, 0x07	; 7
 88c:	11 97       	sbiw	r26, 0x01	; 1
 88e:	f1 f7       	brne	.-4      	; 0x88c <__stack+0x2d>
 890:	00 c0       	rjmp	.+0      	; 0x892 <__stack+0x33>
 892:	00 00       	nop
 894:	b5 c0       	rjmp	.+362    	; 0xa00 <__stack+0x1a1>
		_delay_ms(1);
	}else{
		if(nibble==1){
 896:	b1 e0       	ldi	r27, 0x01	; 1
 898:	fb 16       	cp	r15, r27
 89a:	09 f0       	breq	.+2      	; 0x89e <__stack+0x3f>
 89c:	59 c0       	rjmp	.+178    	; 0x950 <__stack+0xf1>
			GPIO_HIGH_NIBBLE_SETDIR(port,1);
 89e:	87 2d       	mov	r24, r7
 8a0:	61 e0       	ldi	r22, 0x01	; 1
 8a2:	0e 94 8f 02 	call	0x51e	; 0x51e <GPIO_HIGH_NIBBLE_SETDIR>
			GPIO_WRITE_PIN(rw_port,rw_pin,0);
 8a6:	8e 2d       	mov	r24, r14
 8a8:	6c 2d       	mov	r22, r12
 8aa:	40 e0       	ldi	r20, 0x00	; 0
 8ac:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_RETURN_HOME, en_port, en_pin);
 8b0:	81 2f       	mov	r24, r17
 8b2:	61 e0       	ldi	r22, 0x01	; 1
 8b4:	47 2d       	mov	r20, r7
 8b6:	29 2d       	mov	r18, r9
 8b8:	ee 24       	eor	r14, r14
 8ba:	68 94       	set
 8bc:	e1 f8       	bld	r14, 1
 8be:	ca 2c       	mov	r12, r10
 8c0:	a8 2c       	mov	r10, r8
 8c2:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 8c6:	8f e2       	ldi	r24, 0x2F	; 47
 8c8:	95 e7       	ldi	r25, 0x75	; 117
 8ca:	01 97       	sbiw	r24, 0x01	; 1
 8cc:	f1 f7       	brne	.-4      	; 0x8ca <__stack+0x6b>
 8ce:	00 c0       	rjmp	.+0      	; 0x8d0 <__stack+0x71>
 8d0:	00 00       	nop
			_delay_ms(15);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_FUNCTION_4BIT_2LINES, en_port, en_pin);
 8d2:	81 2f       	mov	r24, r17
 8d4:	61 e0       	ldi	r22, 0x01	; 1
 8d6:	47 2d       	mov	r20, r7
 8d8:	29 2d       	mov	r18, r9
 8da:	0f 2e       	mov	r0, r31
 8dc:	f8 e2       	ldi	r31, 0x28	; 40
 8de:	ef 2e       	mov	r14, r31
 8e0:	f0 2d       	mov	r31, r0
 8e2:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 8e6:	af ec       	ldi	r26, 0xCF	; 207
 8e8:	b7 e0       	ldi	r27, 0x07	; 7
 8ea:	11 97       	sbiw	r26, 0x01	; 1
 8ec:	f1 f7       	brne	.-4      	; 0x8ea <__stack+0x8b>
 8ee:	00 c0       	rjmp	.+0      	; 0x8f0 <__stack+0x91>
 8f0:	00 00       	nop
			_delay_ms(1);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_DISP_ON_CURSOR_ON, en_port, en_pin);
 8f2:	81 2f       	mov	r24, r17
 8f4:	61 e0       	ldi	r22, 0x01	; 1
 8f6:	47 2d       	mov	r20, r7
 8f8:	29 2d       	mov	r18, r9
 8fa:	0f 2e       	mov	r0, r31
 8fc:	fe e0       	ldi	r31, 0x0E	; 14
 8fe:	ef 2e       	mov	r14, r31
 900:	f0 2d       	mov	r31, r0
 902:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 906:	8f ec       	ldi	r24, 0xCF	; 207
 908:	97 e0       	ldi	r25, 0x07	; 7
 90a:	01 97       	sbiw	r24, 0x01	; 1
 90c:	f1 f7       	brne	.-4      	; 0x90a <__stack+0xab>
 90e:	00 c0       	rjmp	.+0      	; 0x910 <__stack+0xb1>
 910:	00 00       	nop
			_delay_ms(1);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_CLEAR_SCREEN, en_port, en_pin);
 912:	81 2f       	mov	r24, r17
 914:	61 e0       	ldi	r22, 0x01	; 1
 916:	47 2d       	mov	r20, r7
 918:	29 2d       	mov	r18, r9
 91a:	ee 24       	eor	r14, r14
 91c:	e3 94       	inc	r14
 91e:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 922:	af e1       	ldi	r26, 0x1F	; 31
 924:	be e4       	ldi	r27, 0x4E	; 78
 926:	11 97       	sbiw	r26, 0x01	; 1
 928:	f1 f7       	brne	.-4      	; 0x926 <__stack+0xc7>
 92a:	00 c0       	rjmp	.+0      	; 0x92c <__stack+0xcd>
 92c:	00 00       	nop
			_delay_ms(10);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_ENTRY_MODE, en_port, en_pin);
 92e:	81 2f       	mov	r24, r17
 930:	61 e0       	ldi	r22, 0x01	; 1
 932:	47 2d       	mov	r20, r7
 934:	29 2d       	mov	r18, r9
 936:	0f 2e       	mov	r0, r31
 938:	f6 e0       	ldi	r31, 0x06	; 6
 93a:	ef 2e       	mov	r14, r31
 93c:	f0 2d       	mov	r31, r0
 93e:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 942:	8f ec       	ldi	r24, 0xCF	; 207
 944:	97 e0       	ldi	r25, 0x07	; 7
 946:	01 97       	sbiw	r24, 0x01	; 1
 948:	f1 f7       	brne	.-4      	; 0x946 <__stack+0xe7>
 94a:	00 c0       	rjmp	.+0      	; 0x94c <__stack+0xed>
 94c:	00 00       	nop
 94e:	58 c0       	rjmp	.+176    	; 0xa00 <__stack+0x1a1>
			_delay_ms(1);
		}else{
			GPIO_LOW_NIBBLE_SETDIR(port,1);
 950:	87 2d       	mov	r24, r7
 952:	61 e0       	ldi	r22, 0x01	; 1
 954:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <GPIO_LOW_NIBBLE_SETDIR>
			GPIO_WRITE_PIN(rw_port,rw_pin,0);
 958:	8e 2d       	mov	r24, r14
 95a:	6c 2d       	mov	r22, r12
 95c:	40 e0       	ldi	r20, 0x00	; 0
 95e:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_RETURN_HOME, en_port, en_pin);
 962:	81 2f       	mov	r24, r17
 964:	6f 2d       	mov	r22, r15
 966:	47 2d       	mov	r20, r7
 968:	29 2d       	mov	r18, r9
 96a:	ee 24       	eor	r14, r14
 96c:	68 94       	set
 96e:	e1 f8       	bld	r14, 1
 970:	ca 2c       	mov	r12, r10
 972:	a8 2c       	mov	r10, r8
 974:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 978:	af e2       	ldi	r26, 0x2F	; 47
 97a:	b5 e7       	ldi	r27, 0x75	; 117
 97c:	11 97       	sbiw	r26, 0x01	; 1
 97e:	f1 f7       	brne	.-4      	; 0x97c <__stack+0x11d>
 980:	00 c0       	rjmp	.+0      	; 0x982 <__stack+0x123>
 982:	00 00       	nop
			_delay_ms(15);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_FUNCTION_4BIT_2LINES, en_port, en_pin);
 984:	81 2f       	mov	r24, r17
 986:	6f 2d       	mov	r22, r15
 988:	47 2d       	mov	r20, r7
 98a:	29 2d       	mov	r18, r9
 98c:	0f 2e       	mov	r0, r31
 98e:	f8 e2       	ldi	r31, 0x28	; 40
 990:	ef 2e       	mov	r14, r31
 992:	f0 2d       	mov	r31, r0
 994:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 998:	8f ec       	ldi	r24, 0xCF	; 207
 99a:	97 e0       	ldi	r25, 0x07	; 7
 99c:	01 97       	sbiw	r24, 0x01	; 1
 99e:	f1 f7       	brne	.-4      	; 0x99c <__stack+0x13d>
 9a0:	00 c0       	rjmp	.+0      	; 0x9a2 <__stack+0x143>
 9a2:	00 00       	nop
			_delay_ms(1);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_DISP_ON_CURSOR_ON, en_port, en_pin);
 9a4:	81 2f       	mov	r24, r17
 9a6:	6f 2d       	mov	r22, r15
 9a8:	47 2d       	mov	r20, r7
 9aa:	29 2d       	mov	r18, r9
 9ac:	0f 2e       	mov	r0, r31
 9ae:	fe e0       	ldi	r31, 0x0E	; 14
 9b0:	ef 2e       	mov	r14, r31
 9b2:	f0 2d       	mov	r31, r0
 9b4:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 9b8:	af ec       	ldi	r26, 0xCF	; 207
 9ba:	b7 e0       	ldi	r27, 0x07	; 7
 9bc:	11 97       	sbiw	r26, 0x01	; 1
 9be:	f1 f7       	brne	.-4      	; 0x9bc <__stack+0x15d>
 9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <__stack+0x163>
 9c2:	00 00       	nop
			_delay_ms(1);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_CLEAR_SCREEN, en_port, en_pin);
 9c4:	81 2f       	mov	r24, r17
 9c6:	6f 2d       	mov	r22, r15
 9c8:	47 2d       	mov	r20, r7
 9ca:	29 2d       	mov	r18, r9
 9cc:	ee 24       	eor	r14, r14
 9ce:	e3 94       	inc	r14
 9d0:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 9d4:	8f e1       	ldi	r24, 0x1F	; 31
 9d6:	9e e4       	ldi	r25, 0x4E	; 78
 9d8:	01 97       	sbiw	r24, 0x01	; 1
 9da:	f1 f7       	brne	.-4      	; 0x9d8 <__stack+0x179>
 9dc:	00 c0       	rjmp	.+0      	; 0x9de <__stack+0x17f>
 9de:	00 00       	nop
			_delay_ms(10);
			LCD_SEND_CMD( mode, nibble, port, rs_port, rs_pin,LCD_ENTRY_MODE, en_port, en_pin);
 9e0:	81 2f       	mov	r24, r17
 9e2:	6f 2d       	mov	r22, r15
 9e4:	47 2d       	mov	r20, r7
 9e6:	29 2d       	mov	r18, r9
 9e8:	0f 2e       	mov	r0, r31
 9ea:	f6 e0       	ldi	r31, 0x06	; 6
 9ec:	ef 2e       	mov	r14, r31
 9ee:	f0 2d       	mov	r31, r0
 9f0:	0e 94 67 03 	call	0x6ce	; 0x6ce <LCD_SEND_CMD>
 9f4:	af ec       	ldi	r26, 0xCF	; 207
 9f6:	b7 e0       	ldi	r27, 0x07	; 7
 9f8:	11 97       	sbiw	r26, 0x01	; 1
 9fa:	f1 f7       	brne	.-4      	; 0x9f8 <__stack+0x199>
 9fc:	00 c0       	rjmp	.+0      	; 0x9fe <__stack+0x19f>
 9fe:	00 00       	nop
			_delay_ms(1);
		}
	}
}
 a00:	df 91       	pop	r29
 a02:	cf 91       	pop	r28
 a04:	1f 91       	pop	r17
 a06:	0f 91       	pop	r16
 a08:	ff 90       	pop	r15
 a0a:	ef 90       	pop	r14
 a0c:	df 90       	pop	r13
 a0e:	cf 90       	pop	r12
 a10:	bf 90       	pop	r11
 a12:	af 90       	pop	r10
 a14:	9f 90       	pop	r9
 a16:	8f 90       	pop	r8
 a18:	7f 90       	pop	r7
 a1a:	08 95       	ret

00000a1c <LCD_SEND_CHAR>:
			ENABLE_SET(en_port,en_pin);
			_delay_ms(1);
		}
	}
}
void LCD_SEND_CHAR(u8 mode,u8 nibble,u8 port,u8 rs_port,u8 rs_pin,u8 en_port,u8 en_pin,u8 data){
 a1c:	af 92       	push	r10
 a1e:	cf 92       	push	r12
 a20:	ef 92       	push	r14
 a22:	0f 93       	push	r16
 a24:	cf 93       	push	r28
 a26:	df 93       	push	r29
 a28:	c4 2f       	mov	r28, r20
 a2a:	d2 2f       	mov	r29, r18
	if(mode==1){
 a2c:	81 30       	cpi	r24, 0x01	; 1
 a2e:	a1 f4       	brne	.+40     	; 0xa58 <LCD_SEND_CHAR+0x3c>
		GPIO_WRITE_PORT(port,data);
 a30:	84 2f       	mov	r24, r20
 a32:	6a 2d       	mov	r22, r10
 a34:	0e 94 70 02 	call	0x4e0	; 0x4e0 <GPIO_WRITE_PORT>
		GPIO_WRITE_PIN(rs_port,rs_pin,1);
 a38:	8d 2f       	mov	r24, r29
 a3a:	60 2f       	mov	r22, r16
 a3c:	41 e0       	ldi	r20, 0x01	; 1
 a3e:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
		ENABLE_SET(en_port,en_pin);
 a42:	8e 2d       	mov	r24, r14
 a44:	6c 2d       	mov	r22, r12
 a46:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
 a4a:	8f ec       	ldi	r24, 0xCF	; 207
 a4c:	97 e0       	ldi	r25, 0x07	; 7
 a4e:	01 97       	sbiw	r24, 0x01	; 1
 a50:	f1 f7       	brne	.-4      	; 0xa4e <LCD_SEND_CHAR+0x32>
 a52:	00 c0       	rjmp	.+0      	; 0xa54 <LCD_SEND_CHAR+0x38>
 a54:	00 00       	nop
 a56:	47 c0       	rjmp	.+142    	; 0xae6 <LCD_SEND_CHAR+0xca>
		_delay_ms(1);
	}else{
		if(nibble==1){
 a58:	61 30       	cpi	r22, 0x01	; 1
 a5a:	19 f5       	brne	.+70     	; 0xaa2 <LCD_SEND_CHAR+0x86>
			GPIO_HIGH_NIBBLE_WRITE(port,data>>4);
 a5c:	6a 2d       	mov	r22, r10
 a5e:	62 95       	swap	r22
 a60:	6f 70       	andi	r22, 0x0F	; 15
 a62:	84 2f       	mov	r24, r20
 a64:	0e 94 bc 02 	call	0x578	; 0x578 <GPIO_HIGH_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 a68:	8d 2f       	mov	r24, r29
 a6a:	60 2f       	mov	r22, r16
 a6c:	40 e0       	ldi	r20, 0x00	; 0
 a6e:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 a72:	8e 2d       	mov	r24, r14
 a74:	6c 2d       	mov	r22, r12
 a76:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
			GPIO_HIGH_NIBBLE_WRITE(port,data);
 a7a:	8c 2f       	mov	r24, r28
 a7c:	6a 2d       	mov	r22, r10
 a7e:	0e 94 bc 02 	call	0x578	; 0x578 <GPIO_HIGH_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 a82:	8d 2f       	mov	r24, r29
 a84:	60 2f       	mov	r22, r16
 a86:	40 e0       	ldi	r20, 0x00	; 0
 a88:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 a8c:	8e 2d       	mov	r24, r14
 a8e:	6c 2d       	mov	r22, r12
 a90:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
 a94:	8f ec       	ldi	r24, 0xCF	; 207
 a96:	97 e0       	ldi	r25, 0x07	; 7
 a98:	01 97       	sbiw	r24, 0x01	; 1
 a9a:	f1 f7       	brne	.-4      	; 0xa98 <LCD_SEND_CHAR+0x7c>
 a9c:	00 c0       	rjmp	.+0      	; 0xa9e <LCD_SEND_CHAR+0x82>
 a9e:	00 00       	nop
 aa0:	22 c0       	rjmp	.+68     	; 0xae6 <LCD_SEND_CHAR+0xca>
			_delay_ms(1);
		}else{
			GPIO_LOW_NIBBLE_WRITE(port,data>>4);
 aa2:	6a 2d       	mov	r22, r10
 aa4:	62 95       	swap	r22
 aa6:	6f 70       	andi	r22, 0x0F	; 15
 aa8:	84 2f       	mov	r24, r20
 aaa:	0e 94 1e 03 	call	0x63c	; 0x63c <GPIO_LOW_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 aae:	8d 2f       	mov	r24, r29
 ab0:	60 2f       	mov	r22, r16
 ab2:	40 e0       	ldi	r20, 0x00	; 0
 ab4:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 ab8:	8e 2d       	mov	r24, r14
 aba:	6c 2d       	mov	r22, r12
 abc:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
			GPIO_HIGH_NIBBLE_WRITE(port,data);
 ac0:	8c 2f       	mov	r24, r28
 ac2:	6a 2d       	mov	r22, r10
 ac4:	0e 94 bc 02 	call	0x578	; 0x578 <GPIO_HIGH_NIBBLE_WRITE>
			GPIO_WRITE_PIN(rs_port,rs_pin,0);
 ac8:	8d 2f       	mov	r24, r29
 aca:	60 2f       	mov	r22, r16
 acc:	40 e0       	ldi	r20, 0x00	; 0
 ace:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
			ENABLE_SET(en_port,en_pin);
 ad2:	8e 2d       	mov	r24, r14
 ad4:	6c 2d       	mov	r22, r12
 ad6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <ENABLE_SET>
 ada:	8f ec       	ldi	r24, 0xCF	; 207
 adc:	97 e0       	ldi	r25, 0x07	; 7
 ade:	01 97       	sbiw	r24, 0x01	; 1
 ae0:	f1 f7       	brne	.-4      	; 0xade <LCD_SEND_CHAR+0xc2>
 ae2:	00 c0       	rjmp	.+0      	; 0xae4 <LCD_SEND_CHAR+0xc8>
 ae4:	00 00       	nop
			_delay_ms(1);
		}
	}
 ae6:	df 91       	pop	r29
 ae8:	cf 91       	pop	r28
 aea:	0f 91       	pop	r16
 aec:	ef 90       	pop	r14
 aee:	cf 90       	pop	r12
 af0:	af 90       	pop	r10
 af2:	08 95       	ret

00000af4 <LED_INIT>:
#include "GPIO_MCAL.h"

void LED_INIT(u8 port,u8 pinnum){
	GPIO_SETPIN_DIR(port,pinnum,1);
 af4:	41 e0       	ldi	r20, 0x01	; 1
 af6:	0e 94 4e 00 	call	0x9c	; 0x9c <GPIO_SETPIN_DIR>
}
 afa:	08 95       	ret

00000afc <LED_ON>:
void LED_ON(u8 port,u8 pinnum){
	GPIO_WRITE_PIN(port,pinnum,1);
 afc:	41 e0       	ldi	r20, 0x01	; 1
 afe:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
}
 b02:	08 95       	ret

00000b04 <LED_OFF>:
void LED_OFF(u8 port,u8 pinnum){
	GPIO_WRITE_PIN(port,pinnum,0);
 b04:	40 e0       	ldi	r20, 0x00	; 0
 b06:	0e 94 df 00 	call	0x1be	; 0x1be <GPIO_WRITE_PIN>
}
 b0a:	08 95       	ret

00000b0c <LED_TOGGLE>:
void LED_TOGGLE(u8 port,u8 pinnum){
	GPIO_TOGGLE_PIN(port,pinnum);
 b0c:	0e 94 de 01 	call	0x3bc	; 0x3bc <GPIO_TOGGLE_PIN>
 b10:	08 95       	ret

00000b12 <main>:
#include <util/delay.h>


int main(void)
{
	LED_INIT('A',0);
 b12:	81 e4       	ldi	r24, 0x41	; 65
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	60 e0       	ldi	r22, 0x00	; 0
 b18:	70 e0       	ldi	r23, 0x00	; 0
 b1a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <LED_INIT>
	LED_INIT('A',1);
 b1e:	81 e4       	ldi	r24, 0x41	; 65
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	61 e0       	ldi	r22, 0x01	; 1
 b24:	70 e0       	ldi	r23, 0x00	; 0
 b26:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <LED_INIT>
	LED_INIT('A',2);
 b2a:	81 e4       	ldi	r24, 0x41	; 65
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	62 e0       	ldi	r22, 0x02	; 2
 b30:	70 e0       	ldi	r23, 0x00	; 0
 b32:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <LED_INIT>
	u8 counter=0;
 b36:	c0 e0       	ldi	r28, 0x00	; 0
				LED_ON('A',0);
				_delay_ms(500);
				
			}else{
				LED_OFF('A',0);
				if(counter%3==2){
 b38:	d3 e0       	ldi	r29, 0x03	; 3
	LED_INIT('A',2);
	u8 counter=0;
    while(1)
    {	
		for(counter;;counter++){
			if(counter%2==1){
 b3a:	c0 ff       	sbrs	r28, 0
 b3c:	23 c0       	rjmp	.+70     	; 0xb84 <main+0x72>
				LED_OFF('A',1);
 b3e:	81 e4       	ldi	r24, 0x41	; 65
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	61 e0       	ldi	r22, 0x01	; 1
 b44:	70 e0       	ldi	r23, 0x00	; 0
 b46:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
				LED_OFF('A',2);
 b4a:	81 e4       	ldi	r24, 0x41	; 65
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	62 e0       	ldi	r22, 0x02	; 2
 b50:	70 e0       	ldi	r23, 0x00	; 0
 b52:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
				LED_ON('A',0);
 b56:	81 e4       	ldi	r24, 0x41	; 65
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	60 e0       	ldi	r22, 0x00	; 0
 b5c:	70 e0       	ldi	r23, 0x00	; 0
 b5e:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
 b62:	8f ef       	ldi	r24, 0xFF	; 255
 b64:	94 e3       	ldi	r25, 0x34	; 52
 b66:	ac e0       	ldi	r26, 0x0C	; 12
 b68:	81 50       	subi	r24, 0x01	; 1
 b6a:	90 40       	sbci	r25, 0x00	; 0
 b6c:	a0 40       	sbci	r26, 0x00	; 0
 b6e:	e1 f7       	brne	.-8      	; 0xb68 <main+0x56>
 b70:	00 c0       	rjmp	.+0      	; 0xb72 <main+0x60>
 b72:	00 00       	nop
						LED_OFF('A',2);
						_delay_ms(500);
					}
				}
			}
			if((counter%2==1)&&(counter%3==2)){
 b74:	8c 2f       	mov	r24, r28
 b76:	6d 2f       	mov	r22, r29
 b78:	0e 94 65 06 	call	0xcca	; 0xcca <__udivmodqi4>
 b7c:	92 30       	cpi	r25, 0x02	; 2
 b7e:	09 f0       	breq	.+2      	; 0xb82 <main+0x70>
 b80:	6d c0       	rjmp	.+218    	; 0xc5c <main+0x14a>
 b82:	52 c0       	rjmp	.+164    	; 0xc28 <main+0x116>
				LED_OFF('A',2);
				LED_ON('A',0);
				_delay_ms(500);
				
			}else{
				LED_OFF('A',0);
 b84:	81 e4       	ldi	r24, 0x41	; 65
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	60 e0       	ldi	r22, 0x00	; 0
 b8a:	70 e0       	ldi	r23, 0x00	; 0
 b8c:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
				if(counter%3==2){
 b90:	8c 2f       	mov	r24, r28
 b92:	6d 2f       	mov	r22, r29
 b94:	0e 94 65 06 	call	0xcca	; 0xcca <__udivmodqi4>
 b98:	92 30       	cpi	r25, 0x02	; 2
 b9a:	81 f4       	brne	.+32     	; 0xbbc <main+0xaa>
					LED_ON('A',1);
 b9c:	81 e4       	ldi	r24, 0x41	; 65
 b9e:	90 e0       	ldi	r25, 0x00	; 0
 ba0:	61 e0       	ldi	r22, 0x01	; 1
 ba2:	70 e0       	ldi	r23, 0x00	; 0
 ba4:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
 ba8:	8f ef       	ldi	r24, 0xFF	; 255
 baa:	94 e3       	ldi	r25, 0x34	; 52
 bac:	ac e0       	ldi	r26, 0x0C	; 12
 bae:	81 50       	subi	r24, 0x01	; 1
 bb0:	90 40       	sbci	r25, 0x00	; 0
 bb2:	a0 40       	sbci	r26, 0x00	; 0
 bb4:	e1 f7       	brne	.-8      	; 0xbae <main+0x9c>
 bb6:	00 c0       	rjmp	.+0      	; 0xbb8 <main+0xa6>
 bb8:	00 00       	nop
 bba:	85 c0       	rjmp	.+266    	; 0xcc6 <main+0x1b4>
					_delay_ms(500);
					
				}else{
					LED_OFF('A',1);
 bbc:	81 e4       	ldi	r24, 0x41	; 65
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	61 e0       	ldi	r22, 0x01	; 1
 bc2:	70 e0       	ldi	r23, 0x00	; 0
 bc4:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
					if(counter%4==3){
 bc8:	8c 2f       	mov	r24, r28
 bca:	83 70       	andi	r24, 0x03	; 3
 bcc:	83 30       	cpi	r24, 0x03	; 3
 bce:	81 f4       	brne	.+32     	; 0xbf0 <main+0xde>
						LED_ON('A',1);
 bd0:	81 e4       	ldi	r24, 0x41	; 65
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	61 e0       	ldi	r22, 0x01	; 1
 bd6:	70 e0       	ldi	r23, 0x00	; 0
 bd8:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
 bdc:	8f ef       	ldi	r24, 0xFF	; 255
 bde:	94 e3       	ldi	r25, 0x34	; 52
 be0:	ac e0       	ldi	r26, 0x0C	; 12
 be2:	81 50       	subi	r24, 0x01	; 1
 be4:	90 40       	sbci	r25, 0x00	; 0
 be6:	a0 40       	sbci	r26, 0x00	; 0
 be8:	e1 f7       	brne	.-8      	; 0xbe2 <main+0xd0>
 bea:	00 c0       	rjmp	.+0      	; 0xbec <main+0xda>
 bec:	00 00       	nop
 bee:	6b c0       	rjmp	.+214    	; 0xcc6 <main+0x1b4>
						_delay_ms(500);
					}else{
						LED_OFF('A',0);
 bf0:	81 e4       	ldi	r24, 0x41	; 65
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	60 e0       	ldi	r22, 0x00	; 0
 bf6:	70 e0       	ldi	r23, 0x00	; 0
 bf8:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
						LED_OFF('A',1);
 bfc:	81 e4       	ldi	r24, 0x41	; 65
 bfe:	90 e0       	ldi	r25, 0x00	; 0
 c00:	61 e0       	ldi	r22, 0x01	; 1
 c02:	70 e0       	ldi	r23, 0x00	; 0
 c04:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
						LED_OFF('A',2);
 c08:	81 e4       	ldi	r24, 0x41	; 65
 c0a:	90 e0       	ldi	r25, 0x00	; 0
 c0c:	62 e0       	ldi	r22, 0x02	; 2
 c0e:	70 e0       	ldi	r23, 0x00	; 0
 c10:	0e 94 82 05 	call	0xb04	; 0xb04 <LED_OFF>
 c14:	8f ef       	ldi	r24, 0xFF	; 255
 c16:	94 e3       	ldi	r25, 0x34	; 52
 c18:	ac e0       	ldi	r26, 0x0C	; 12
 c1a:	81 50       	subi	r24, 0x01	; 1
 c1c:	90 40       	sbci	r25, 0x00	; 0
 c1e:	a0 40       	sbci	r26, 0x00	; 0
 c20:	e1 f7       	brne	.-8      	; 0xc1a <main+0x108>
 c22:	00 c0       	rjmp	.+0      	; 0xc24 <main+0x112>
 c24:	00 00       	nop
 c26:	4f c0       	rjmp	.+158    	; 0xcc6 <main+0x1b4>
						_delay_ms(500);
					}
				}
			}
			if((counter%2==1)&&(counter%3==2)){
				LED_ON('A',0);
 c28:	81 e4       	ldi	r24, 0x41	; 65
 c2a:	90 e0       	ldi	r25, 0x00	; 0
 c2c:	60 e0       	ldi	r22, 0x00	; 0
 c2e:	70 e0       	ldi	r23, 0x00	; 0
 c30:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
				LED_ON('A',1);
 c34:	81 e4       	ldi	r24, 0x41	; 65
 c36:	90 e0       	ldi	r25, 0x00	; 0
 c38:	61 e0       	ldi	r22, 0x01	; 1
 c3a:	70 e0       	ldi	r23, 0x00	; 0
 c3c:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
 c40:	8f ef       	ldi	r24, 0xFF	; 255
 c42:	94 e3       	ldi	r25, 0x34	; 52
 c44:	ac e0       	ldi	r26, 0x0C	; 12
 c46:	81 50       	subi	r24, 0x01	; 1
 c48:	90 40       	sbci	r25, 0x00	; 0
 c4a:	a0 40       	sbci	r26, 0x00	; 0
 c4c:	e1 f7       	brne	.-8      	; 0xc46 <main+0x134>
 c4e:	00 c0       	rjmp	.+0      	; 0xc50 <main+0x13e>
 c50:	00 00       	nop
				LED_ON('A',2);
				_delay_ms(500);
			}else{
				
			}
			if((counter%2==1)&&(counter%3==2)&&(counter%4==3)){
 c52:	8c 2f       	mov	r24, r28
 c54:	83 70       	andi	r24, 0x03	; 3
 c56:	83 30       	cpi	r24, 0x03	; 3
 c58:	b1 f5       	brne	.+108    	; 0xcc6 <main+0x1b4>
 c5a:	1a c0       	rjmp	.+52     	; 0xc90 <main+0x17e>
			}
			if((counter%2==1)&&(counter%3==2)){
				LED_ON('A',0);
				LED_ON('A',1);
				_delay_ms(500);
			}else if((counter%2==1)&&(counter%4==3)){
 c5c:	8c 2f       	mov	r24, r28
 c5e:	83 70       	andi	r24, 0x03	; 3
 c60:	83 30       	cpi	r24, 0x03	; 3
 c62:	89 f5       	brne	.+98     	; 0xcc6 <main+0x1b4>
				LED_ON('A',0);
 c64:	81 e4       	ldi	r24, 0x41	; 65
 c66:	90 e0       	ldi	r25, 0x00	; 0
 c68:	60 e0       	ldi	r22, 0x00	; 0
 c6a:	70 e0       	ldi	r23, 0x00	; 0
 c6c:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
				LED_ON('A',2);
 c70:	81 e4       	ldi	r24, 0x41	; 65
 c72:	90 e0       	ldi	r25, 0x00	; 0
 c74:	62 e0       	ldi	r22, 0x02	; 2
 c76:	70 e0       	ldi	r23, 0x00	; 0
 c78:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
 c7c:	8f ef       	ldi	r24, 0xFF	; 255
 c7e:	94 e3       	ldi	r25, 0x34	; 52
 c80:	ac e0       	ldi	r26, 0x0C	; 12
 c82:	81 50       	subi	r24, 0x01	; 1
 c84:	90 40       	sbci	r25, 0x00	; 0
 c86:	a0 40       	sbci	r26, 0x00	; 0
 c88:	e1 f7       	brne	.-8      	; 0xc82 <main+0x170>
 c8a:	00 c0       	rjmp	.+0      	; 0xc8c <main+0x17a>
 c8c:	00 00       	nop
 c8e:	1b c0       	rjmp	.+54     	; 0xcc6 <main+0x1b4>
				_delay_ms(500);
			}else{
				
			}
			if((counter%2==1)&&(counter%3==2)&&(counter%4==3)){
				LED_ON('A',0);
 c90:	81 e4       	ldi	r24, 0x41	; 65
 c92:	90 e0       	ldi	r25, 0x00	; 0
 c94:	60 e0       	ldi	r22, 0x00	; 0
 c96:	70 e0       	ldi	r23, 0x00	; 0
 c98:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
				LED_ON('A',1);
 c9c:	81 e4       	ldi	r24, 0x41	; 65
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	61 e0       	ldi	r22, 0x01	; 1
 ca2:	70 e0       	ldi	r23, 0x00	; 0
 ca4:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
				LED_ON('A',2);
 ca8:	81 e4       	ldi	r24, 0x41	; 65
 caa:	90 e0       	ldi	r25, 0x00	; 0
 cac:	62 e0       	ldi	r22, 0x02	; 2
 cae:	70 e0       	ldi	r23, 0x00	; 0
 cb0:	0e 94 7e 05 	call	0xafc	; 0xafc <LED_ON>
 cb4:	8f ef       	ldi	r24, 0xFF	; 255
 cb6:	94 e3       	ldi	r25, 0x34	; 52
 cb8:	ac e0       	ldi	r26, 0x0C	; 12
 cba:	81 50       	subi	r24, 0x01	; 1
 cbc:	90 40       	sbci	r25, 0x00	; 0
 cbe:	a0 40       	sbci	r26, 0x00	; 0
 cc0:	e1 f7       	brne	.-8      	; 0xcba <main+0x1a8>
 cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <main+0x1b2>
 cc4:	00 00       	nop
	LED_INIT('A',1);
	LED_INIT('A',2);
	u8 counter=0;
    while(1)
    {	
		for(counter;;counter++){
 cc6:	cf 5f       	subi	r28, 0xFF	; 255
				
			}else{
				
			}
			
		}
 cc8:	38 cf       	rjmp	.-400    	; 0xb3a <main+0x28>

00000cca <__udivmodqi4>:
 cca:	99 1b       	sub	r25, r25
 ccc:	79 e0       	ldi	r23, 0x09	; 9
 cce:	04 c0       	rjmp	.+8      	; 0xcd8 <__udivmodqi4_ep>

00000cd0 <__udivmodqi4_loop>:
 cd0:	99 1f       	adc	r25, r25
 cd2:	96 17       	cp	r25, r22
 cd4:	08 f0       	brcs	.+2      	; 0xcd8 <__udivmodqi4_ep>
 cd6:	96 1b       	sub	r25, r22

00000cd8 <__udivmodqi4_ep>:
 cd8:	88 1f       	adc	r24, r24
 cda:	7a 95       	dec	r23
 cdc:	c9 f7       	brne	.-14     	; 0xcd0 <__udivmodqi4_loop>
 cde:	80 95       	com	r24
 ce0:	08 95       	ret

00000ce2 <_exit>:
 ce2:	f8 94       	cli

00000ce4 <__stop_program>:
 ce4:	ff cf       	rjmp	.-2      	; 0xce4 <__stop_program>
